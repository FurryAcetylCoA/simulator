FIRRTL version 1.2.0
circuit Exp6AllTest :
  module ShiftReg :
    input clock : Clock
    input reset : UInt<1>
    output in : { flip data : UInt<2>, flip bit : UInt<1>, flip op : UInt<3>, flip en : UInt<1>} @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<2> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = cat(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 18:13]
    node _out_next_T_1 = cat(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 19:13]
    node _out_next_T_2 = cat(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 20:13]
    node _out_next_T_3 = cat(in.bit, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 21:13]
    node _out_next_T_4 = cat(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 22:13]
    node _out_next_T_5 = cat(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 23:13]
    node _out_next_T_6 = eq(in.op, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_7 = bits(_out_next_T_6, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_8 = mux(_out_next_T_7, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_9 = and(_out_next_T_8, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_10 = eq(in.op, UInt<1>("h1")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_11 = bits(_out_next_T_10, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_12 = mux(_out_next_T_11, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_13 = and(_out_next_T_12, in.data) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_14 = eq(in.op, UInt<2>("h2")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_15 = bits(_out_next_T_14, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_16 = mux(_out_next_T_15, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_17 = and(_out_next_T_16, _out_next_T) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_18 = eq(in.op, UInt<2>("h3")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_19 = bits(_out_next_T_18, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_20 = mux(_out_next_T_19, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_21 = and(_out_next_T_20, _out_next_T_1) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_22 = eq(in.op, UInt<3>("h4")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_23 = bits(_out_next_T_22, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_24 = mux(_out_next_T_23, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_25 = and(_out_next_T_24, _out_next_T_2) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_26 = eq(in.op, UInt<3>("h5")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_27 = bits(_out_next_T_26, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_28 = mux(_out_next_T_27, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_29 = and(_out_next_T_28, _out_next_T_3) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_30 = eq(in.op, UInt<3>("h6")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_31 = bits(_out_next_T_30, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_32 = mux(_out_next_T_31, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_33 = and(_out_next_T_32, _out_next_T_4) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_34 = eq(in.op, UInt<3>("h7")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_35 = bits(_out_next_T_34, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_36 = mux(_out_next_T_35, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_37 = and(_out_next_T_36, _out_next_T_5) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_38 = or(_out_next_T_9, _out_next_T_13) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_39 = or(_out_next_T_38, _out_next_T_17) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_40 = or(_out_next_T_39, _out_next_T_21) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_41 = or(_out_next_T_40, _out_next_T_25) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_42 = or(_out_next_T_41, _out_next_T_29) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_43 = or(_out_next_T_42, _out_next_T_33) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_44 = or(_out_next_T_43, _out_next_T_37) @[playground/src/exp6/ShiftReg.scala 24:60]
    wire out_next : UInt<2> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[playground/src/utils/Utils.scala 63:22]
    when in.en : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_45 = bits(out_r, 1, 1) @[playground/src/exp6/ShiftReg.scala 18:25]
    node _out_next_T_46 = cat(UInt<1>("h0"), _out_next_T_45) @[playground/src/exp6/ShiftReg.scala 18:13]
    node _out_next_T_47 = bits(out_r, 0, 0) @[playground/src/exp6/ShiftReg.scala 19:15]
    node _out_next_T_48 = cat(_out_next_T_47, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 19:13]
    node _out_next_T_49 = bits(out_r, 1, 1) @[playground/src/exp6/ShiftReg.scala 20:15]
    node _out_next_T_50 = bits(out_r, 1, 1) @[playground/src/exp6/ShiftReg.scala 20:27]
    node _out_next_T_51 = cat(_out_next_T_49, _out_next_T_50) @[playground/src/exp6/ShiftReg.scala 20:13]
    node _out_next_T_52 = bits(out_r, 1, 1) @[playground/src/exp6/ShiftReg.scala 21:23]
    node _out_next_T_53 = cat(in.bit, _out_next_T_52) @[playground/src/exp6/ShiftReg.scala 21:13]
    node _out_next_T_54 = bits(out_r, 0, 0) @[playground/src/exp6/ShiftReg.scala 22:15]
    node _out_next_T_55 = bits(out_r, 1, 1) @[playground/src/exp6/ShiftReg.scala 22:21]
    node _out_next_T_56 = cat(_out_next_T_54, _out_next_T_55) @[playground/src/exp6/ShiftReg.scala 22:13]
    node _out_next_T_57 = bits(out_r, 0, 0) @[playground/src/exp6/ShiftReg.scala 23:15]
    node _out_next_T_58 = bits(out_r, 1, 1) @[playground/src/exp6/ShiftReg.scala 23:29]
    node _out_next_T_59 = cat(_out_next_T_57, _out_next_T_58) @[playground/src/exp6/ShiftReg.scala 23:13]
    node _out_next_T_60 = eq(in.op, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_61 = bits(_out_next_T_60, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_62 = mux(_out_next_T_61, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_63 = and(_out_next_T_62, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_64 = eq(in.op, UInt<1>("h1")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_65 = bits(_out_next_T_64, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_66 = mux(_out_next_T_65, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_67 = and(_out_next_T_66, in.data) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_68 = eq(in.op, UInt<2>("h2")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_69 = bits(_out_next_T_68, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_70 = mux(_out_next_T_69, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_71 = and(_out_next_T_70, _out_next_T_46) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_72 = eq(in.op, UInt<2>("h3")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_73 = bits(_out_next_T_72, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_74 = mux(_out_next_T_73, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_75 = and(_out_next_T_74, _out_next_T_48) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_76 = eq(in.op, UInt<3>("h4")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_77 = bits(_out_next_T_76, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_78 = mux(_out_next_T_77, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_79 = and(_out_next_T_78, _out_next_T_51) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_80 = eq(in.op, UInt<3>("h5")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_81 = bits(_out_next_T_80, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_82 = mux(_out_next_T_81, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_83 = and(_out_next_T_82, _out_next_T_53) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_84 = eq(in.op, UInt<3>("h6")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_85 = bits(_out_next_T_84, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_86 = mux(_out_next_T_85, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_87 = and(_out_next_T_86, _out_next_T_56) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_88 = eq(in.op, UInt<3>("h7")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_89 = bits(_out_next_T_88, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_90 = mux(_out_next_T_89, UInt<2>("h3"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_91 = and(_out_next_T_90, _out_next_T_59) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_92 = or(_out_next_T_63, _out_next_T_67) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_93 = or(_out_next_T_92, _out_next_T_71) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_94 = or(_out_next_T_93, _out_next_T_75) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_95 = or(_out_next_T_94, _out_next_T_79) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_96 = or(_out_next_T_95, _out_next_T_83) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_97 = or(_out_next_T_96, _out_next_T_87) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_98 = or(_out_next_T_97, _out_next_T_91) @[playground/src/exp6/ShiftReg.scala 24:60]
    out_next <= _out_next_T_98 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/ShiftReg.scala 25:7]
    node _ref_out_next_T = shr(UInt<2>("h0"), 1) @[playground/src/exp6/ShiftReg.scala 30:15]
    node _ref_out_next_T_1 = shl(UInt<2>("h0"), 1) @[playground/src/exp6/ShiftReg.scala 31:15]
    node _ref_out_next_T_2 = asSInt(UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 32:31]
    node _ref_out_next_T_3 = shr(_ref_out_next_T_2, 1) @[playground/src/exp6/ShiftReg.scala 32:38]
    node _ref_out_next_T_4 = asUInt(_ref_out_next_T_3) @[playground/src/exp6/ShiftReg.scala 32:44]
    node _ref_out_next_T_5 = cat(UInt<1>("h0"), _ref_out_next_T_4) @[playground/src/exp6/ShiftReg.scala 32:15]
    node _ref_out_next_T_6 = cat(in.bit, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 33:15]
    node _ref_out_next_T_7 = cat(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 34:15]
    node _ref_out_next_T_8 = cat(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 35:15]
    node _ref_out_next_T_9 = eq(UInt<1>("h1"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_10 = mux(_ref_out_next_T_9, in.data, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_11 = eq(UInt<2>("h2"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_12 = mux(_ref_out_next_T_11, _ref_out_next_T, _ref_out_next_T_10) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_13 = eq(UInt<2>("h3"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_14 = mux(_ref_out_next_T_13, _ref_out_next_T_1, _ref_out_next_T_12) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_15 = eq(UInt<3>("h4"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_16 = mux(_ref_out_next_T_15, _ref_out_next_T_5, _ref_out_next_T_14) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_17 = eq(UInt<3>("h5"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_18 = mux(_ref_out_next_T_17, _ref_out_next_T_6, _ref_out_next_T_16) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_19 = eq(UInt<3>("h6"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_20 = mux(_ref_out_next_T_19, _ref_out_next_T_7, _ref_out_next_T_18) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_21 = eq(UInt<3>("h7"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_22 = mux(_ref_out_next_T_21, _ref_out_next_T_8, _ref_out_next_T_20) @[playground/src/exp6/ShiftReg.scala 27:56]
    wire ref_out_next : UInt<3> @[playground/src/utils/Utils.scala 62:20]
    reg ref_out : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[playground/src/utils/Utils.scala 63:22]
    when in.en : @[playground/src/utils/Utils.scala 63:22]
      ref_out <= ref_out_next @[playground/src/utils/Utils.scala 63:22]
    node _ref_out_next_T_23 = shr(ref_out, 1) @[playground/src/exp6/ShiftReg.scala 30:15]
    node _ref_out_next_T_24 = shl(ref_out, 1) @[playground/src/exp6/ShiftReg.scala 31:15]
    node _ref_out_next_T_25 = bits(ref_out, 1, 1) @[playground/src/exp6/ShiftReg.scala 32:17]
    node _ref_out_next_T_26 = asSInt(ref_out) @[playground/src/exp6/ShiftReg.scala 32:31]
    node _ref_out_next_T_27 = shr(_ref_out_next_T_26, 1) @[playground/src/exp6/ShiftReg.scala 32:38]
    node _ref_out_next_T_28 = asUInt(_ref_out_next_T_27) @[playground/src/exp6/ShiftReg.scala 32:44]
    node _ref_out_next_T_29 = cat(_ref_out_next_T_25, _ref_out_next_T_28) @[playground/src/exp6/ShiftReg.scala 32:15]
    node _ref_out_next_T_30 = bits(ref_out, 1, 1) @[playground/src/exp6/ShiftReg.scala 33:25]
    node _ref_out_next_T_31 = cat(in.bit, _ref_out_next_T_30) @[playground/src/exp6/ShiftReg.scala 33:15]
    node _ref_out_next_T_32 = bits(ref_out, 0, 0) @[playground/src/exp6/ShiftReg.scala 34:17]
    node _ref_out_next_T_33 = bits(ref_out, 1, 1) @[playground/src/exp6/ShiftReg.scala 34:23]
    node _ref_out_next_T_34 = cat(_ref_out_next_T_32, _ref_out_next_T_33) @[playground/src/exp6/ShiftReg.scala 34:15]
    node _ref_out_next_T_35 = bits(ref_out, 0, 0) @[playground/src/exp6/ShiftReg.scala 35:17]
    node _ref_out_next_T_36 = bits(ref_out, 1, 1) @[playground/src/exp6/ShiftReg.scala 35:31]
    node _ref_out_next_T_37 = cat(_ref_out_next_T_35, _ref_out_next_T_36) @[playground/src/exp6/ShiftReg.scala 35:15]
    node _ref_out_next_T_38 = eq(UInt<1>("h1"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_39 = mux(_ref_out_next_T_38, in.data, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_40 = eq(UInt<2>("h2"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_41 = mux(_ref_out_next_T_40, _ref_out_next_T_23, _ref_out_next_T_39) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_42 = eq(UInt<2>("h3"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_43 = mux(_ref_out_next_T_42, _ref_out_next_T_24, _ref_out_next_T_41) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_44 = eq(UInt<3>("h4"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_45 = mux(_ref_out_next_T_44, _ref_out_next_T_29, _ref_out_next_T_43) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_46 = eq(UInt<3>("h5"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_47 = mux(_ref_out_next_T_46, _ref_out_next_T_31, _ref_out_next_T_45) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_48 = eq(UInt<3>("h6"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_49 = mux(_ref_out_next_T_48, _ref_out_next_T_34, _ref_out_next_T_47) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_50 = eq(UInt<3>("h7"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_51 = mux(_ref_out_next_T_50, _ref_out_next_T_37, _ref_out_next_T_49) @[playground/src/exp6/ShiftReg.scala 27:56]
    ref_out_next <= _ref_out_next_T_51 @[playground/src/utils/Utils.scala 64:10]
    node _T = eq(out, ref_out) @[playground/src/exp6/ShiftReg.scala 37:14]
    node _T_1 = asUInt(reset) @[playground/src/exp6/ShiftReg.scala 37:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 37:9]
    when _T_2 : @[playground/src/exp6/ShiftReg.scala 37:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 37:9]
      when _T_3 : @[playground/src/exp6/ShiftReg.scala 37:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: out = %d, ref_out = %d, bit = %d, en = %d, op = %d\n    at ShiftReg.scala:37 assert(out === ref_out, p\"out = ${out}, ref_out = ${ref_out}, bit = ${in.bit}, en = ${in.en}, op = ${in.op}\")\n", out, ref_out, in.bit, in.en, in.op) : printf @[playground/src/exp6/ShiftReg.scala 37:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/ShiftReg.scala 37:9]


  module ShiftRegTest :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of ShiftReg @[playground/src/exp6/ShiftReg.scala 41:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    node _T_2 = asUInt(m.reset) @[playground/src/utils/Utils.scala 38:92]
    reg cnt : UInt<14>, clock with :
      reset => (reset, UInt<14>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire finish_1 : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    finish_1 <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when _T_2 : @[playground/src/utils/WCounter.scala 33:16]
      node _wrap_wrap_T = mux(UInt<1>("h1"), UInt<14>("h3fff"), UInt<14>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node wrap_wrap_1 = eq(cnt, _wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[playground/src/utils/WCounter.scala 18:20]
      cnt <= _wrap_value_T_3 @[playground/src/utils/WCounter.scala 18:11]
      finish_1 <= wrap_wrap_1 @[playground/src/utils/WCounter.scala 33:23]
    wire allStepIn : { flip data : UInt<2>, flip bit : UInt<1>, flip op : UInt<3>, flip en : UInt<1>}[2] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<14> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T = bits(_allStepIn_WIRE, 0, 0) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].en <= _allStepIn_T @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_1 = bits(_allStepIn_WIRE, 3, 1) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].op <= _allStepIn_T_1 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_2 = bits(_allStepIn_WIRE, 4, 4) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].bit <= _allStepIn_T_2 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_3 = bits(_allStepIn_WIRE, 6, 5) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].data <= _allStepIn_T_3 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_4 = bits(_allStepIn_WIRE, 7, 7) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].en <= _allStepIn_T_4 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_5 = bits(_allStepIn_WIRE, 10, 8) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].op <= _allStepIn_T_5 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_6 = bits(_allStepIn_WIRE, 11, 11) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].bit <= _allStepIn_T_6 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_7 = bits(_allStepIn_WIRE, 13, 12) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].data <= _allStepIn_T_7 @[playground/src/utils/Utils.scala 39:35]
    m.in.en <= allStepIn[step].en @[playground/src/utils/Utils.scala 40:12]
    m.in.op <= allStepIn[step].op @[playground/src/utils/Utils.scala 40:12]
    m.in.bit <= allStepIn[step].bit @[playground/src/utils/Utils.scala 40:12]
    m.in.data <= allStepIn[step].data @[playground/src/utils/Utils.scala 40:12]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_3 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_4 = and(start, _T_3) @[playground/src/utils/Utils.scala 48:17]
    when _T_4 : @[playground/src/utils/Utils.scala 48:37]
      node _T_5 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_6 = eq(_T_5, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_6 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for ShiftReg-2bit, may finish after 49152 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_7 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_8 = and(_T_7, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_8 : @[playground/src/utils/Utils.scala 52:32]
      node _T_9 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_10 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_11 = eq(_T_10, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_11 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: ShiftReg-2bit\n", _T_9) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module ShiftReg_1 :
    input clock : Clock
    input reset : UInt<1>
    output in : { flip data : UInt<3>, flip bit : UInt<1>, flip op : UInt<3>, flip en : UInt<1>} @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<3> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = cat(UInt<1>("h0"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 18:13]
    node _out_next_T_1 = cat(UInt<2>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 19:13]
    node _out_next_T_2 = cat(UInt<1>("h0"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 20:13]
    node _out_next_T_3 = cat(in.bit, UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 21:13]
    node _out_next_T_4 = cat(UInt<1>("h0"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 22:13]
    node _out_next_T_5 = cat(UInt<2>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 23:13]
    node _out_next_T_6 = eq(in.op, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_7 = bits(_out_next_T_6, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_8 = mux(_out_next_T_7, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_9 = and(_out_next_T_8, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_10 = eq(in.op, UInt<1>("h1")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_11 = bits(_out_next_T_10, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_12 = mux(_out_next_T_11, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_13 = and(_out_next_T_12, in.data) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_14 = eq(in.op, UInt<2>("h2")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_15 = bits(_out_next_T_14, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_16 = mux(_out_next_T_15, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_17 = and(_out_next_T_16, _out_next_T) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_18 = eq(in.op, UInt<2>("h3")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_19 = bits(_out_next_T_18, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_20 = mux(_out_next_T_19, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_21 = and(_out_next_T_20, _out_next_T_1) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_22 = eq(in.op, UInt<3>("h4")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_23 = bits(_out_next_T_22, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_24 = mux(_out_next_T_23, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_25 = and(_out_next_T_24, _out_next_T_2) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_26 = eq(in.op, UInt<3>("h5")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_27 = bits(_out_next_T_26, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_28 = mux(_out_next_T_27, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_29 = and(_out_next_T_28, _out_next_T_3) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_30 = eq(in.op, UInt<3>("h6")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_31 = bits(_out_next_T_30, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_32 = mux(_out_next_T_31, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_33 = and(_out_next_T_32, _out_next_T_4) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_34 = eq(in.op, UInt<3>("h7")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_35 = bits(_out_next_T_34, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_36 = mux(_out_next_T_35, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_37 = and(_out_next_T_36, _out_next_T_5) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_38 = or(_out_next_T_9, _out_next_T_13) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_39 = or(_out_next_T_38, _out_next_T_17) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_40 = or(_out_next_T_39, _out_next_T_21) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_41 = or(_out_next_T_40, _out_next_T_25) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_42 = or(_out_next_T_41, _out_next_T_29) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_43 = or(_out_next_T_42, _out_next_T_33) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_44 = or(_out_next_T_43, _out_next_T_37) @[playground/src/exp6/ShiftReg.scala 24:60]
    wire out_next : UInt<3> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[playground/src/utils/Utils.scala 63:22]
    when in.en : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_45 = bits(out_r, 2, 1) @[playground/src/exp6/ShiftReg.scala 18:25]
    node _out_next_T_46 = cat(UInt<1>("h0"), _out_next_T_45) @[playground/src/exp6/ShiftReg.scala 18:13]
    node _out_next_T_47 = bits(out_r, 1, 0) @[playground/src/exp6/ShiftReg.scala 19:15]
    node _out_next_T_48 = cat(_out_next_T_47, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 19:13]
    node _out_next_T_49 = bits(out_r, 2, 2) @[playground/src/exp6/ShiftReg.scala 20:15]
    node _out_next_T_50 = bits(out_r, 2, 1) @[playground/src/exp6/ShiftReg.scala 20:27]
    node _out_next_T_51 = cat(_out_next_T_49, _out_next_T_50) @[playground/src/exp6/ShiftReg.scala 20:13]
    node _out_next_T_52 = bits(out_r, 2, 1) @[playground/src/exp6/ShiftReg.scala 21:23]
    node _out_next_T_53 = cat(in.bit, _out_next_T_52) @[playground/src/exp6/ShiftReg.scala 21:13]
    node _out_next_T_54 = bits(out_r, 0, 0) @[playground/src/exp6/ShiftReg.scala 22:15]
    node _out_next_T_55 = bits(out_r, 2, 1) @[playground/src/exp6/ShiftReg.scala 22:21]
    node _out_next_T_56 = cat(_out_next_T_54, _out_next_T_55) @[playground/src/exp6/ShiftReg.scala 22:13]
    node _out_next_T_57 = bits(out_r, 1, 0) @[playground/src/exp6/ShiftReg.scala 23:15]
    node _out_next_T_58 = bits(out_r, 2, 2) @[playground/src/exp6/ShiftReg.scala 23:29]
    node _out_next_T_59 = cat(_out_next_T_57, _out_next_T_58) @[playground/src/exp6/ShiftReg.scala 23:13]
    node _out_next_T_60 = eq(in.op, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_61 = bits(_out_next_T_60, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_62 = mux(_out_next_T_61, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_63 = and(_out_next_T_62, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_64 = eq(in.op, UInt<1>("h1")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_65 = bits(_out_next_T_64, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_66 = mux(_out_next_T_65, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_67 = and(_out_next_T_66, in.data) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_68 = eq(in.op, UInt<2>("h2")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_69 = bits(_out_next_T_68, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_70 = mux(_out_next_T_69, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_71 = and(_out_next_T_70, _out_next_T_46) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_72 = eq(in.op, UInt<2>("h3")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_73 = bits(_out_next_T_72, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_74 = mux(_out_next_T_73, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_75 = and(_out_next_T_74, _out_next_T_48) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_76 = eq(in.op, UInt<3>("h4")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_77 = bits(_out_next_T_76, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_78 = mux(_out_next_T_77, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_79 = and(_out_next_T_78, _out_next_T_51) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_80 = eq(in.op, UInt<3>("h5")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_81 = bits(_out_next_T_80, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_82 = mux(_out_next_T_81, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_83 = and(_out_next_T_82, _out_next_T_53) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_84 = eq(in.op, UInt<3>("h6")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_85 = bits(_out_next_T_84, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_86 = mux(_out_next_T_85, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_87 = and(_out_next_T_86, _out_next_T_56) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_88 = eq(in.op, UInt<3>("h7")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_89 = bits(_out_next_T_88, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_90 = mux(_out_next_T_89, UInt<3>("h7"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_91 = and(_out_next_T_90, _out_next_T_59) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_92 = or(_out_next_T_63, _out_next_T_67) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_93 = or(_out_next_T_92, _out_next_T_71) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_94 = or(_out_next_T_93, _out_next_T_75) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_95 = or(_out_next_T_94, _out_next_T_79) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_96 = or(_out_next_T_95, _out_next_T_83) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_97 = or(_out_next_T_96, _out_next_T_87) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_98 = or(_out_next_T_97, _out_next_T_91) @[playground/src/exp6/ShiftReg.scala 24:60]
    out_next <= _out_next_T_98 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/ShiftReg.scala 25:7]
    node _ref_out_next_T = shr(UInt<3>("h0"), 1) @[playground/src/exp6/ShiftReg.scala 30:15]
    node _ref_out_next_T_1 = shl(UInt<3>("h0"), 1) @[playground/src/exp6/ShiftReg.scala 31:15]
    node _ref_out_next_T_2 = asSInt(UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 32:31]
    node _ref_out_next_T_3 = shr(_ref_out_next_T_2, 1) @[playground/src/exp6/ShiftReg.scala 32:38]
    node _ref_out_next_T_4 = asUInt(_ref_out_next_T_3) @[playground/src/exp6/ShiftReg.scala 32:44]
    node _ref_out_next_T_5 = cat(UInt<1>("h0"), _ref_out_next_T_4) @[playground/src/exp6/ShiftReg.scala 32:15]
    node _ref_out_next_T_6 = cat(in.bit, UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 33:15]
    node _ref_out_next_T_7 = cat(UInt<1>("h0"), UInt<2>("h0")) @[playground/src/exp6/ShiftReg.scala 34:15]
    node _ref_out_next_T_8 = cat(UInt<2>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 35:15]
    node _ref_out_next_T_9 = eq(UInt<1>("h1"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_10 = mux(_ref_out_next_T_9, in.data, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_11 = eq(UInt<2>("h2"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_12 = mux(_ref_out_next_T_11, _ref_out_next_T, _ref_out_next_T_10) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_13 = eq(UInt<2>("h3"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_14 = mux(_ref_out_next_T_13, _ref_out_next_T_1, _ref_out_next_T_12) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_15 = eq(UInt<3>("h4"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_16 = mux(_ref_out_next_T_15, _ref_out_next_T_5, _ref_out_next_T_14) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_17 = eq(UInt<3>("h5"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_18 = mux(_ref_out_next_T_17, _ref_out_next_T_6, _ref_out_next_T_16) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_19 = eq(UInt<3>("h6"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_20 = mux(_ref_out_next_T_19, _ref_out_next_T_7, _ref_out_next_T_18) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_21 = eq(UInt<3>("h7"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_22 = mux(_ref_out_next_T_21, _ref_out_next_T_8, _ref_out_next_T_20) @[playground/src/exp6/ShiftReg.scala 27:56]
    wire ref_out_next : UInt<4> @[playground/src/utils/Utils.scala 62:20]
    reg ref_out : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[playground/src/utils/Utils.scala 63:22]
    when in.en : @[playground/src/utils/Utils.scala 63:22]
      ref_out <= ref_out_next @[playground/src/utils/Utils.scala 63:22]
    node _ref_out_next_T_23 = shr(ref_out, 1) @[playground/src/exp6/ShiftReg.scala 30:15]
    node _ref_out_next_T_24 = shl(ref_out, 1) @[playground/src/exp6/ShiftReg.scala 31:15]
    node _ref_out_next_T_25 = bits(ref_out, 2, 2) @[playground/src/exp6/ShiftReg.scala 32:17]
    node _ref_out_next_T_26 = asSInt(ref_out) @[playground/src/exp6/ShiftReg.scala 32:31]
    node _ref_out_next_T_27 = shr(_ref_out_next_T_26, 1) @[playground/src/exp6/ShiftReg.scala 32:38]
    node _ref_out_next_T_28 = asUInt(_ref_out_next_T_27) @[playground/src/exp6/ShiftReg.scala 32:44]
    node _ref_out_next_T_29 = cat(_ref_out_next_T_25, _ref_out_next_T_28) @[playground/src/exp6/ShiftReg.scala 32:15]
    node _ref_out_next_T_30 = bits(ref_out, 2, 1) @[playground/src/exp6/ShiftReg.scala 33:25]
    node _ref_out_next_T_31 = cat(in.bit, _ref_out_next_T_30) @[playground/src/exp6/ShiftReg.scala 33:15]
    node _ref_out_next_T_32 = bits(ref_out, 0, 0) @[playground/src/exp6/ShiftReg.scala 34:17]
    node _ref_out_next_T_33 = bits(ref_out, 2, 1) @[playground/src/exp6/ShiftReg.scala 34:23]
    node _ref_out_next_T_34 = cat(_ref_out_next_T_32, _ref_out_next_T_33) @[playground/src/exp6/ShiftReg.scala 34:15]
    node _ref_out_next_T_35 = bits(ref_out, 1, 0) @[playground/src/exp6/ShiftReg.scala 35:17]
    node _ref_out_next_T_36 = bits(ref_out, 2, 2) @[playground/src/exp6/ShiftReg.scala 35:31]
    node _ref_out_next_T_37 = cat(_ref_out_next_T_35, _ref_out_next_T_36) @[playground/src/exp6/ShiftReg.scala 35:15]
    node _ref_out_next_T_38 = eq(UInt<1>("h1"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_39 = mux(_ref_out_next_T_38, in.data, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_40 = eq(UInt<2>("h2"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_41 = mux(_ref_out_next_T_40, _ref_out_next_T_23, _ref_out_next_T_39) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_42 = eq(UInt<2>("h3"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_43 = mux(_ref_out_next_T_42, _ref_out_next_T_24, _ref_out_next_T_41) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_44 = eq(UInt<3>("h4"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_45 = mux(_ref_out_next_T_44, _ref_out_next_T_29, _ref_out_next_T_43) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_46 = eq(UInt<3>("h5"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_47 = mux(_ref_out_next_T_46, _ref_out_next_T_31, _ref_out_next_T_45) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_48 = eq(UInt<3>("h6"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_49 = mux(_ref_out_next_T_48, _ref_out_next_T_34, _ref_out_next_T_47) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_50 = eq(UInt<3>("h7"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_51 = mux(_ref_out_next_T_50, _ref_out_next_T_37, _ref_out_next_T_49) @[playground/src/exp6/ShiftReg.scala 27:56]
    ref_out_next <= _ref_out_next_T_51 @[playground/src/utils/Utils.scala 64:10]
    node _T = eq(out, ref_out) @[playground/src/exp6/ShiftReg.scala 37:14]
    node _T_1 = asUInt(reset) @[playground/src/exp6/ShiftReg.scala 37:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 37:9]
    when _T_2 : @[playground/src/exp6/ShiftReg.scala 37:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 37:9]
      when _T_3 : @[playground/src/exp6/ShiftReg.scala 37:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: out = %d, ref_out = %d, bit = %d, en = %d, op = %d\n    at ShiftReg.scala:37 assert(out === ref_out, p\"out = ${out}, ref_out = ${ref_out}, bit = ${in.bit}, en = ${in.en}, op = ${in.op}\")\n", out, ref_out, in.bit, in.en, in.op) : printf @[playground/src/exp6/ShiftReg.scala 37:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/ShiftReg.scala 37:9]


  module ShiftRegTest_1 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of ShiftReg_1 @[playground/src/exp6/ShiftReg.scala 41:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    node _T_2 = asUInt(m.reset) @[playground/src/utils/Utils.scala 38:92]
    reg cnt : UInt<16>, clock with :
      reset => (reset, UInt<16>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire finish_1 : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    finish_1 <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when _T_2 : @[playground/src/utils/WCounter.scala 33:16]
      node _wrap_wrap_T = mux(UInt<1>("h1"), UInt<16>("hffff"), UInt<16>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node wrap_wrap_1 = eq(cnt, _wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[playground/src/utils/WCounter.scala 18:20]
      cnt <= _wrap_value_T_3 @[playground/src/utils/WCounter.scala 18:11]
      finish_1 <= wrap_wrap_1 @[playground/src/utils/WCounter.scala 33:23]
    wire allStepIn : { flip data : UInt<3>, flip bit : UInt<1>, flip op : UInt<3>, flip en : UInt<1>}[2] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<16> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T = bits(_allStepIn_WIRE, 0, 0) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].en <= _allStepIn_T @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_1 = bits(_allStepIn_WIRE, 3, 1) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].op <= _allStepIn_T_1 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_2 = bits(_allStepIn_WIRE, 4, 4) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].bit <= _allStepIn_T_2 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_3 = bits(_allStepIn_WIRE, 7, 5) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].data <= _allStepIn_T_3 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_4 = bits(_allStepIn_WIRE, 8, 8) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].en <= _allStepIn_T_4 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_5 = bits(_allStepIn_WIRE, 11, 9) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].op <= _allStepIn_T_5 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_6 = bits(_allStepIn_WIRE, 12, 12) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].bit <= _allStepIn_T_6 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_7 = bits(_allStepIn_WIRE, 15, 13) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].data <= _allStepIn_T_7 @[playground/src/utils/Utils.scala 39:35]
    m.in.en <= allStepIn[step].en @[playground/src/utils/Utils.scala 40:12]
    m.in.op <= allStepIn[step].op @[playground/src/utils/Utils.scala 40:12]
    m.in.bit <= allStepIn[step].bit @[playground/src/utils/Utils.scala 40:12]
    m.in.data <= allStepIn[step].data @[playground/src/utils/Utils.scala 40:12]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_3 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_4 = and(start, _T_3) @[playground/src/utils/Utils.scala 48:17]
    when _T_4 : @[playground/src/utils/Utils.scala 48:37]
      node _T_5 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_6 = eq(_T_5, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_6 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for ShiftReg-3bit, may finish after 196608 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_7 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_8 = and(_T_7, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_8 : @[playground/src/utils/Utils.scala 52:32]
      node _T_9 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_10 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_11 = eq(_T_10, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_11 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: ShiftReg-3bit\n", _T_9) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module ShiftReg_2 :
    input clock : Clock
    input reset : UInt<1>
    output in : { flip data : UInt<4>, flip bit : UInt<1>, flip op : UInt<3>, flip en : UInt<1>} @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<4> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = cat(UInt<1>("h0"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 18:13]
    node _out_next_T_1 = cat(UInt<3>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 19:13]
    node _out_next_T_2 = cat(UInt<1>("h0"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 20:13]
    node _out_next_T_3 = cat(in.bit, UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 21:13]
    node _out_next_T_4 = cat(UInt<1>("h0"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 22:13]
    node _out_next_T_5 = cat(UInt<3>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 23:13]
    node _out_next_T_6 = eq(in.op, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_7 = bits(_out_next_T_6, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_8 = mux(_out_next_T_7, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_9 = and(_out_next_T_8, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_10 = eq(in.op, UInt<1>("h1")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_11 = bits(_out_next_T_10, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_12 = mux(_out_next_T_11, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_13 = and(_out_next_T_12, in.data) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_14 = eq(in.op, UInt<2>("h2")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_15 = bits(_out_next_T_14, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_16 = mux(_out_next_T_15, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_17 = and(_out_next_T_16, _out_next_T) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_18 = eq(in.op, UInt<2>("h3")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_19 = bits(_out_next_T_18, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_20 = mux(_out_next_T_19, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_21 = and(_out_next_T_20, _out_next_T_1) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_22 = eq(in.op, UInt<3>("h4")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_23 = bits(_out_next_T_22, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_24 = mux(_out_next_T_23, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_25 = and(_out_next_T_24, _out_next_T_2) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_26 = eq(in.op, UInt<3>("h5")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_27 = bits(_out_next_T_26, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_28 = mux(_out_next_T_27, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_29 = and(_out_next_T_28, _out_next_T_3) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_30 = eq(in.op, UInt<3>("h6")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_31 = bits(_out_next_T_30, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_32 = mux(_out_next_T_31, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_33 = and(_out_next_T_32, _out_next_T_4) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_34 = eq(in.op, UInt<3>("h7")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_35 = bits(_out_next_T_34, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_36 = mux(_out_next_T_35, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_37 = and(_out_next_T_36, _out_next_T_5) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_38 = or(_out_next_T_9, _out_next_T_13) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_39 = or(_out_next_T_38, _out_next_T_17) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_40 = or(_out_next_T_39, _out_next_T_21) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_41 = or(_out_next_T_40, _out_next_T_25) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_42 = or(_out_next_T_41, _out_next_T_29) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_43 = or(_out_next_T_42, _out_next_T_33) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_44 = or(_out_next_T_43, _out_next_T_37) @[playground/src/exp6/ShiftReg.scala 24:60]
    wire out_next : UInt<4> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[playground/src/utils/Utils.scala 63:22]
    when in.en : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_45 = bits(out_r, 3, 1) @[playground/src/exp6/ShiftReg.scala 18:25]
    node _out_next_T_46 = cat(UInt<1>("h0"), _out_next_T_45) @[playground/src/exp6/ShiftReg.scala 18:13]
    node _out_next_T_47 = bits(out_r, 2, 0) @[playground/src/exp6/ShiftReg.scala 19:15]
    node _out_next_T_48 = cat(_out_next_T_47, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 19:13]
    node _out_next_T_49 = bits(out_r, 3, 3) @[playground/src/exp6/ShiftReg.scala 20:15]
    node _out_next_T_50 = bits(out_r, 3, 1) @[playground/src/exp6/ShiftReg.scala 20:27]
    node _out_next_T_51 = cat(_out_next_T_49, _out_next_T_50) @[playground/src/exp6/ShiftReg.scala 20:13]
    node _out_next_T_52 = bits(out_r, 3, 1) @[playground/src/exp6/ShiftReg.scala 21:23]
    node _out_next_T_53 = cat(in.bit, _out_next_T_52) @[playground/src/exp6/ShiftReg.scala 21:13]
    node _out_next_T_54 = bits(out_r, 0, 0) @[playground/src/exp6/ShiftReg.scala 22:15]
    node _out_next_T_55 = bits(out_r, 3, 1) @[playground/src/exp6/ShiftReg.scala 22:21]
    node _out_next_T_56 = cat(_out_next_T_54, _out_next_T_55) @[playground/src/exp6/ShiftReg.scala 22:13]
    node _out_next_T_57 = bits(out_r, 2, 0) @[playground/src/exp6/ShiftReg.scala 23:15]
    node _out_next_T_58 = bits(out_r, 3, 3) @[playground/src/exp6/ShiftReg.scala 23:29]
    node _out_next_T_59 = cat(_out_next_T_57, _out_next_T_58) @[playground/src/exp6/ShiftReg.scala 23:13]
    node _out_next_T_60 = eq(in.op, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_61 = bits(_out_next_T_60, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_62 = mux(_out_next_T_61, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_63 = and(_out_next_T_62, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_64 = eq(in.op, UInt<1>("h1")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_65 = bits(_out_next_T_64, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_66 = mux(_out_next_T_65, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_67 = and(_out_next_T_66, in.data) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_68 = eq(in.op, UInt<2>("h2")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_69 = bits(_out_next_T_68, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_70 = mux(_out_next_T_69, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_71 = and(_out_next_T_70, _out_next_T_46) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_72 = eq(in.op, UInt<2>("h3")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_73 = bits(_out_next_T_72, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_74 = mux(_out_next_T_73, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_75 = and(_out_next_T_74, _out_next_T_48) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_76 = eq(in.op, UInt<3>("h4")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_77 = bits(_out_next_T_76, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_78 = mux(_out_next_T_77, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_79 = and(_out_next_T_78, _out_next_T_51) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_80 = eq(in.op, UInt<3>("h5")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_81 = bits(_out_next_T_80, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_82 = mux(_out_next_T_81, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_83 = and(_out_next_T_82, _out_next_T_53) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_84 = eq(in.op, UInt<3>("h6")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_85 = bits(_out_next_T_84, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_86 = mux(_out_next_T_85, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_87 = and(_out_next_T_86, _out_next_T_56) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_88 = eq(in.op, UInt<3>("h7")) @[playground/src/exp6/ShiftReg.scala 24:32]
    node _out_next_T_89 = bits(_out_next_T_88, 0, 0) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_90 = mux(_out_next_T_89, UInt<4>("hf"), UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 24:18]
    node _out_next_T_91 = and(_out_next_T_90, _out_next_T_59) @[playground/src/exp6/ShiftReg.scala 24:44]
    node _out_next_T_92 = or(_out_next_T_63, _out_next_T_67) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_93 = or(_out_next_T_92, _out_next_T_71) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_94 = or(_out_next_T_93, _out_next_T_75) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_95 = or(_out_next_T_94, _out_next_T_79) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_96 = or(_out_next_T_95, _out_next_T_83) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_97 = or(_out_next_T_96, _out_next_T_87) @[playground/src/exp6/ShiftReg.scala 24:60]
    node _out_next_T_98 = or(_out_next_T_97, _out_next_T_91) @[playground/src/exp6/ShiftReg.scala 24:60]
    out_next <= _out_next_T_98 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/ShiftReg.scala 25:7]
    node _ref_out_next_T = shr(UInt<4>("h0"), 1) @[playground/src/exp6/ShiftReg.scala 30:15]
    node _ref_out_next_T_1 = shl(UInt<4>("h0"), 1) @[playground/src/exp6/ShiftReg.scala 31:15]
    node _ref_out_next_T_2 = asSInt(UInt<4>("h0")) @[playground/src/exp6/ShiftReg.scala 32:31]
    node _ref_out_next_T_3 = shr(_ref_out_next_T_2, 1) @[playground/src/exp6/ShiftReg.scala 32:38]
    node _ref_out_next_T_4 = asUInt(_ref_out_next_T_3) @[playground/src/exp6/ShiftReg.scala 32:44]
    node _ref_out_next_T_5 = cat(UInt<1>("h0"), _ref_out_next_T_4) @[playground/src/exp6/ShiftReg.scala 32:15]
    node _ref_out_next_T_6 = cat(in.bit, UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 33:15]
    node _ref_out_next_T_7 = cat(UInt<1>("h0"), UInt<3>("h0")) @[playground/src/exp6/ShiftReg.scala 34:15]
    node _ref_out_next_T_8 = cat(UInt<3>("h0"), UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 35:15]
    node _ref_out_next_T_9 = eq(UInt<1>("h1"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_10 = mux(_ref_out_next_T_9, in.data, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_11 = eq(UInt<2>("h2"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_12 = mux(_ref_out_next_T_11, _ref_out_next_T, _ref_out_next_T_10) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_13 = eq(UInt<2>("h3"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_14 = mux(_ref_out_next_T_13, _ref_out_next_T_1, _ref_out_next_T_12) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_15 = eq(UInt<3>("h4"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_16 = mux(_ref_out_next_T_15, _ref_out_next_T_5, _ref_out_next_T_14) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_17 = eq(UInt<3>("h5"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_18 = mux(_ref_out_next_T_17, _ref_out_next_T_6, _ref_out_next_T_16) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_19 = eq(UInt<3>("h6"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_20 = mux(_ref_out_next_T_19, _ref_out_next_T_7, _ref_out_next_T_18) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_21 = eq(UInt<3>("h7"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_22 = mux(_ref_out_next_T_21, _ref_out_next_T_8, _ref_out_next_T_20) @[playground/src/exp6/ShiftReg.scala 27:56]
    wire ref_out_next : UInt<5> @[playground/src/utils/Utils.scala 62:20]
    reg ref_out : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[playground/src/utils/Utils.scala 63:22]
    when in.en : @[playground/src/utils/Utils.scala 63:22]
      ref_out <= ref_out_next @[playground/src/utils/Utils.scala 63:22]
    node _ref_out_next_T_23 = shr(ref_out, 1) @[playground/src/exp6/ShiftReg.scala 30:15]
    node _ref_out_next_T_24 = shl(ref_out, 1) @[playground/src/exp6/ShiftReg.scala 31:15]
    node _ref_out_next_T_25 = bits(ref_out, 3, 3) @[playground/src/exp6/ShiftReg.scala 32:17]
    node _ref_out_next_T_26 = asSInt(ref_out) @[playground/src/exp6/ShiftReg.scala 32:31]
    node _ref_out_next_T_27 = shr(_ref_out_next_T_26, 1) @[playground/src/exp6/ShiftReg.scala 32:38]
    node _ref_out_next_T_28 = asUInt(_ref_out_next_T_27) @[playground/src/exp6/ShiftReg.scala 32:44]
    node _ref_out_next_T_29 = cat(_ref_out_next_T_25, _ref_out_next_T_28) @[playground/src/exp6/ShiftReg.scala 32:15]
    node _ref_out_next_T_30 = bits(ref_out, 3, 1) @[playground/src/exp6/ShiftReg.scala 33:25]
    node _ref_out_next_T_31 = cat(in.bit, _ref_out_next_T_30) @[playground/src/exp6/ShiftReg.scala 33:15]
    node _ref_out_next_T_32 = bits(ref_out, 0, 0) @[playground/src/exp6/ShiftReg.scala 34:17]
    node _ref_out_next_T_33 = bits(ref_out, 3, 1) @[playground/src/exp6/ShiftReg.scala 34:23]
    node _ref_out_next_T_34 = cat(_ref_out_next_T_32, _ref_out_next_T_33) @[playground/src/exp6/ShiftReg.scala 34:15]
    node _ref_out_next_T_35 = bits(ref_out, 2, 0) @[playground/src/exp6/ShiftReg.scala 35:17]
    node _ref_out_next_T_36 = bits(ref_out, 3, 3) @[playground/src/exp6/ShiftReg.scala 35:31]
    node _ref_out_next_T_37 = cat(_ref_out_next_T_35, _ref_out_next_T_36) @[playground/src/exp6/ShiftReg.scala 35:15]
    node _ref_out_next_T_38 = eq(UInt<1>("h1"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_39 = mux(_ref_out_next_T_38, in.data, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_40 = eq(UInt<2>("h2"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_41 = mux(_ref_out_next_T_40, _ref_out_next_T_23, _ref_out_next_T_39) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_42 = eq(UInt<2>("h3"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_43 = mux(_ref_out_next_T_42, _ref_out_next_T_24, _ref_out_next_T_41) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_44 = eq(UInt<3>("h4"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_45 = mux(_ref_out_next_T_44, _ref_out_next_T_29, _ref_out_next_T_43) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_46 = eq(UInt<3>("h5"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_47 = mux(_ref_out_next_T_46, _ref_out_next_T_31, _ref_out_next_T_45) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_48 = eq(UInt<3>("h6"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_49 = mux(_ref_out_next_T_48, _ref_out_next_T_34, _ref_out_next_T_47) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_50 = eq(UInt<3>("h7"), in.op) @[playground/src/exp6/ShiftReg.scala 27:56]
    node _ref_out_next_T_51 = mux(_ref_out_next_T_50, _ref_out_next_T_37, _ref_out_next_T_49) @[playground/src/exp6/ShiftReg.scala 27:56]
    ref_out_next <= _ref_out_next_T_51 @[playground/src/utils/Utils.scala 64:10]
    node _T = eq(out, ref_out) @[playground/src/exp6/ShiftReg.scala 37:14]
    node _T_1 = asUInt(reset) @[playground/src/exp6/ShiftReg.scala 37:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 37:9]
    when _T_2 : @[playground/src/exp6/ShiftReg.scala 37:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/ShiftReg.scala 37:9]
      when _T_3 : @[playground/src/exp6/ShiftReg.scala 37:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: out = %d, ref_out = %d, bit = %d, en = %d, op = %d\n    at ShiftReg.scala:37 assert(out === ref_out, p\"out = ${out}, ref_out = ${ref_out}, bit = ${in.bit}, en = ${in.en}, op = ${in.op}\")\n", out, ref_out, in.bit, in.en, in.op) : printf @[playground/src/exp6/ShiftReg.scala 37:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/ShiftReg.scala 37:9]


  module ShiftRegTest_2 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of ShiftReg_2 @[playground/src/exp6/ShiftReg.scala 41:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    node _T_2 = asUInt(m.reset) @[playground/src/utils/Utils.scala 38:92]
    reg cnt : UInt<18>, clock with :
      reset => (reset, UInt<18>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire finish_1 : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    finish_1 <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when _T_2 : @[playground/src/utils/WCounter.scala 33:16]
      node _wrap_wrap_T = mux(UInt<1>("h1"), UInt<18>("h3ffff"), UInt<18>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node wrap_wrap_1 = eq(cnt, _wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[playground/src/utils/WCounter.scala 18:20]
      cnt <= _wrap_value_T_3 @[playground/src/utils/WCounter.scala 18:11]
      finish_1 <= wrap_wrap_1 @[playground/src/utils/WCounter.scala 33:23]
    wire allStepIn : { flip data : UInt<4>, flip bit : UInt<1>, flip op : UInt<3>, flip en : UInt<1>}[2] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<18> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T = bits(_allStepIn_WIRE, 0, 0) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].en <= _allStepIn_T @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_1 = bits(_allStepIn_WIRE, 3, 1) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].op <= _allStepIn_T_1 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_2 = bits(_allStepIn_WIRE, 4, 4) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].bit <= _allStepIn_T_2 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_3 = bits(_allStepIn_WIRE, 8, 5) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[0].data <= _allStepIn_T_3 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_4 = bits(_allStepIn_WIRE, 9, 9) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].en <= _allStepIn_T_4 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_5 = bits(_allStepIn_WIRE, 12, 10) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].op <= _allStepIn_T_5 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_6 = bits(_allStepIn_WIRE, 13, 13) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].bit <= _allStepIn_T_6 @[playground/src/utils/Utils.scala 39:35]
    node _allStepIn_T_7 = bits(_allStepIn_WIRE, 17, 14) @[playground/src/utils/Utils.scala 39:35]
    allStepIn[1].data <= _allStepIn_T_7 @[playground/src/utils/Utils.scala 39:35]
    m.in.en <= allStepIn[step].en @[playground/src/utils/Utils.scala 40:12]
    m.in.op <= allStepIn[step].op @[playground/src/utils/Utils.scala 40:12]
    m.in.bit <= allStepIn[step].bit @[playground/src/utils/Utils.scala 40:12]
    m.in.data <= allStepIn[step].data @[playground/src/utils/Utils.scala 40:12]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_3 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_4 = and(start, _T_3) @[playground/src/utils/Utils.scala 48:17]
    when _T_4 : @[playground/src/utils/Utils.scala 48:37]
      node _T_5 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_6 = eq(_T_5, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_6 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for ShiftReg-4bit, may finish after 786432 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_7 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_8 = and(_T_7, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_8 : @[playground/src/utils/Utils.scala 52:32]
      node _T_9 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_10 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_11 = eq(_T_10, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_11 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: ShiftReg-4bit\n", _T_9) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module BarrelShift :
    input clock : Clock
    input reset : UInt<1>
    output in : { flip in : UInt<2>, flip shamt : UInt<1>, flip isLeft : UInt<1>, flip isArith : UInt<1>} @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<2> @[playground/src/utils/Utils.scala 28:15]

    node _leftIn_T = bits(in.in, 1, 1) @[playground/src/exp6/BarrelShift.scala 16:37]
    node leftIn = mux(in.isArith, _leftIn_T, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 16:19]
    node _out_T = bits(in.in, 0, 0) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_1 = bits(in.in, 1, 1) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_2 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_3 = cat(in.isLeft, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_4 = eq(_out_T_3, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_5 = and(_out_T_4, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_6 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_7 = cat(in.isLeft, _out_T_6) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_8 = eq(_out_T_7, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_9 = and(_out_T_8, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_10 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_11 = cat(in.isLeft, _out_T_10) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_12 = eq(_out_T_11, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_13 = and(_out_T_12, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_14 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_15 = cat(in.isLeft, _out_T_14) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_16 = eq(_out_T_15, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_17 = and(_out_T_16, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_18 = or(_out_T_5, _out_T_9) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_19 = or(_out_T_18, _out_T_13) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_20 = or(_out_T_19, _out_T_17) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_21 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_22 = cat(in.isLeft, _out_T_21) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_23 = eq(_out_T_22, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_24 = and(_out_T_23, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_25 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_26 = cat(in.isLeft, _out_T_25) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_27 = eq(_out_T_26, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_28 = and(_out_T_27, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_29 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_30 = cat(in.isLeft, _out_T_29) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_31 = eq(_out_T_30, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_32 = and(_out_T_31, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_33 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_34 = cat(in.isLeft, _out_T_33) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_35 = eq(_out_T_34, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_36 = and(_out_T_35, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_37 = or(_out_T_24, _out_T_28) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_38 = or(_out_T_37, _out_T_32) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_39 = or(_out_T_38, _out_T_36) @[playground/src/exp6/BarrelShift.scala 24:73]
    wire _out_WIRE : UInt<1>[2] @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[0] <= _out_T_20 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[1] <= _out_T_39 @[playground/src/exp6/BarrelShift.scala 28:17]
    node _out_T_40 = cat(_out_WIRE[1], _out_WIRE[0]) @[playground/src/exp6/BarrelShift.scala 28:67]
    out <= _out_T_40 @[playground/src/exp6/BarrelShift.scala 28:7]
    node _ref_out_T = dshl(in.in, in.shamt) @[playground/src/exp6/BarrelShift.scala 30:39]
    node _ref_out_T_1 = bits(_ref_out_T, 1, 0) @[playground/src/exp6/BarrelShift.scala 30:51]
    node _ref_out_T_2 = asSInt(in.in) @[playground/src/exp6/BarrelShift.scala 31:28]
    node _ref_out_T_3 = dshr(_ref_out_T_2, in.shamt) @[playground/src/exp6/BarrelShift.scala 31:35]
    node _ref_out_T_4 = asUInt(_ref_out_T_3) @[playground/src/exp6/BarrelShift.scala 31:48]
    node _ref_out_T_5 = dshr(in.in, in.shamt) @[playground/src/exp6/BarrelShift.scala 31:62]
    node _ref_out_T_6 = mux(in.isArith, _ref_out_T_4, _ref_out_T_5) @[playground/src/exp6/BarrelShift.scala 31:8]
    node ref_out = mux(in.isLeft, _ref_out_T_1, _ref_out_T_6) @[playground/src/exp6/BarrelShift.scala 30:20]
    node _T = eq(out, ref_out) @[playground/src/exp6/BarrelShift.scala 32:14]
    node _T_1 = asUInt(reset) @[playground/src/exp6/BarrelShift.scala 32:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 32:9]
    when _T_2 : @[playground/src/exp6/BarrelShift.scala 32:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 32:9]
      when _T_3 : @[playground/src/exp6/BarrelShift.scala 32:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at BarrelShift.scala:32 assert(out === ref_out)\n") : printf @[playground/src/exp6/BarrelShift.scala 32:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/BarrelShift.scala 32:9]


  module BarrelShiftTest :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of BarrelShift @[playground/src/exp6/BarrelShift.scala 36:17]
    m.clock <= clock
    m.reset <= reset
    reg cnt : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire finish_1 : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    finish_1 <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _wrap_wrap_T = mux(UInt<1>("h1"), UInt<5>("h1f"), UInt<5>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node wrap_wrap = eq(cnt, _wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _wrap_value_T = add(cnt, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cnt <= _wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      finish_1 <= wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    wire _m_in_WIRE : { flip in : UInt<2>, flip shamt : UInt<1>, flip isLeft : UInt<1>, flip isArith : UInt<1>} @[playground/src/utils/Utils.scala 33:27]
    wire _m_in_WIRE_1 : UInt<5> @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE_1 <= cnt @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T = bits(_m_in_WIRE_1, 0, 0) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.isArith <= _m_in_T @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_1 = bits(_m_in_WIRE_1, 1, 1) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.isLeft <= _m_in_T_1 @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_2 = bits(_m_in_WIRE_1, 2, 2) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.shamt <= _m_in_T_2 @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_3 = bits(_m_in_WIRE_1, 4, 3) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.in <= _m_in_T_3 @[playground/src/utils/Utils.scala 33:27]
    m.in.isArith <= _m_in_WIRE.isArith @[playground/src/utils/Utils.scala 33:12]
    m.in.isLeft <= _m_in_WIRE.isLeft @[playground/src/utils/Utils.scala 33:12]
    m.in.shamt <= _m_in_WIRE.shamt @[playground/src/utils/Utils.scala 33:12]
    m.in.in <= _m_in_WIRE.in @[playground/src/utils/Utils.scala 33:12]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_1 = and(start, _T) @[playground/src/utils/Utils.scala 48:17]
    when _T_1 : @[playground/src/utils/Utils.scala 48:37]
      node _T_2 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_3 = eq(_T_2, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_3 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for BarrelShift-2bit, may finish after 32 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_4 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_5 = and(_T_4, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_5 : @[playground/src/utils/Utils.scala 52:32]
      node _T_6 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_7 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_8 = eq(_T_7, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_8 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: BarrelShift-2bit\n", _T_6) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module BarrelShift_1 :
    input clock : Clock
    input reset : UInt<1>
    output in : { flip in : UInt<4>, flip shamt : UInt<2>, flip isLeft : UInt<1>, flip isArith : UInt<1>} @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<4> @[playground/src/utils/Utils.scala 28:15]

    node _leftIn_T = bits(in.in, 3, 3) @[playground/src/exp6/BarrelShift.scala 16:37]
    node leftIn = mux(in.isArith, _leftIn_T, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 16:19]
    node _out_T = bits(in.in, 0, 0) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_1 = bits(in.in, 1, 1) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_2 = bits(in.in, 2, 2) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_3 = bits(in.in, 3, 3) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_4 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_5 = cat(in.isLeft, _out_T_4) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_6 = eq(_out_T_5, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_7 = and(_out_T_6, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_8 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_9 = cat(in.isLeft, _out_T_8) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_10 = eq(_out_T_9, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_11 = and(_out_T_10, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_12 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_13 = cat(in.isLeft, _out_T_12) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_14 = eq(_out_T_13, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_15 = and(_out_T_14, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_16 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_17 = cat(in.isLeft, _out_T_16) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_18 = eq(_out_T_17, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_19 = and(_out_T_18, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_20 = or(_out_T_7, _out_T_11) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_21 = or(_out_T_20, _out_T_15) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_22 = or(_out_T_21, _out_T_19) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_23 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_24 = cat(in.isLeft, _out_T_23) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_25 = eq(_out_T_24, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_26 = and(_out_T_25, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_27 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_28 = cat(in.isLeft, _out_T_27) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_29 = eq(_out_T_28, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_30 = and(_out_T_29, _out_T_3) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_31 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_32 = cat(in.isLeft, _out_T_31) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_33 = eq(_out_T_32, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_34 = and(_out_T_33, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_35 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_36 = cat(in.isLeft, _out_T_35) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_37 = eq(_out_T_36, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_38 = and(_out_T_37, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_39 = or(_out_T_26, _out_T_30) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_40 = or(_out_T_39, _out_T_34) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_41 = or(_out_T_40, _out_T_38) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_42 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_43 = cat(in.isLeft, _out_T_42) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_44 = eq(_out_T_43, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_45 = and(_out_T_44, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_46 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_47 = cat(in.isLeft, _out_T_46) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_48 = eq(_out_T_47, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_49 = and(_out_T_48, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_50 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_51 = cat(in.isLeft, _out_T_50) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_52 = eq(_out_T_51, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_53 = and(_out_T_52, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_54 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_55 = cat(in.isLeft, _out_T_54) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_56 = eq(_out_T_55, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_57 = and(_out_T_56, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_58 = or(_out_T_45, _out_T_49) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_59 = or(_out_T_58, _out_T_53) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_60 = or(_out_T_59, _out_T_57) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_61 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_62 = cat(in.isLeft, _out_T_61) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_63 = eq(_out_T_62, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_64 = and(_out_T_63, _out_T_3) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_65 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_66 = cat(in.isLeft, _out_T_65) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_67 = eq(_out_T_66, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_68 = and(_out_T_67, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_69 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_70 = cat(in.isLeft, _out_T_69) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_71 = eq(_out_T_70, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_72 = and(_out_T_71, _out_T_3) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_73 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_74 = cat(in.isLeft, _out_T_73) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_75 = eq(_out_T_74, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_76 = and(_out_T_75, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_77 = or(_out_T_64, _out_T_68) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_78 = or(_out_T_77, _out_T_72) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_79 = or(_out_T_78, _out_T_76) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_80 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_81 = cat(in.isLeft, _out_T_80) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_82 = eq(_out_T_81, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_83 = and(_out_T_82, _out_T_22) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_84 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_85 = cat(in.isLeft, _out_T_84) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_86 = eq(_out_T_85, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_87 = and(_out_T_86, _out_T_41) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_88 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_89 = cat(in.isLeft, _out_T_88) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_90 = eq(_out_T_89, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_91 = and(_out_T_90, _out_T_22) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_92 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_93 = cat(in.isLeft, _out_T_92) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_94 = eq(_out_T_93, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_95 = and(_out_T_94, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_96 = or(_out_T_83, _out_T_87) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_97 = or(_out_T_96, _out_T_91) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_98 = or(_out_T_97, _out_T_95) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_99 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_100 = cat(in.isLeft, _out_T_99) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_101 = eq(_out_T_100, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_102 = and(_out_T_101, _out_T_41) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_103 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_104 = cat(in.isLeft, _out_T_103) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_105 = eq(_out_T_104, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_106 = and(_out_T_105, _out_T_60) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_107 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_108 = cat(in.isLeft, _out_T_107) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_109 = eq(_out_T_108, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_110 = and(_out_T_109, _out_T_41) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_111 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_112 = cat(in.isLeft, _out_T_111) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_113 = eq(_out_T_112, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_114 = and(_out_T_113, _out_T_22) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_115 = or(_out_T_102, _out_T_106) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_116 = or(_out_T_115, _out_T_110) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_117 = or(_out_T_116, _out_T_114) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_118 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_119 = cat(in.isLeft, _out_T_118) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_120 = eq(_out_T_119, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_121 = and(_out_T_120, _out_T_60) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_122 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_123 = cat(in.isLeft, _out_T_122) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_124 = eq(_out_T_123, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_125 = and(_out_T_124, _out_T_79) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_126 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_127 = cat(in.isLeft, _out_T_126) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_128 = eq(_out_T_127, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_129 = and(_out_T_128, _out_T_60) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_130 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_131 = cat(in.isLeft, _out_T_130) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_132 = eq(_out_T_131, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_133 = and(_out_T_132, _out_T_41) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_134 = or(_out_T_121, _out_T_125) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_135 = or(_out_T_134, _out_T_129) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_136 = or(_out_T_135, _out_T_133) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_137 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_138 = cat(in.isLeft, _out_T_137) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_139 = eq(_out_T_138, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_140 = and(_out_T_139, _out_T_79) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_141 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_142 = cat(in.isLeft, _out_T_141) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_143 = eq(_out_T_142, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_144 = and(_out_T_143, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_145 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_146 = cat(in.isLeft, _out_T_145) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_147 = eq(_out_T_146, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_148 = and(_out_T_147, _out_T_79) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_149 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_150 = cat(in.isLeft, _out_T_149) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_151 = eq(_out_T_150, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_152 = and(_out_T_151, _out_T_60) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_153 = or(_out_T_140, _out_T_144) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_154 = or(_out_T_153, _out_T_148) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_155 = or(_out_T_154, _out_T_152) @[playground/src/exp6/BarrelShift.scala 24:73]
    wire _out_WIRE : UInt<1>[4] @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[0] <= _out_T_98 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[1] <= _out_T_117 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[2] <= _out_T_136 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[3] <= _out_T_155 @[playground/src/exp6/BarrelShift.scala 28:17]
    node out_lo = cat(_out_WIRE[1], _out_WIRE[0]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi = cat(_out_WIRE[3], _out_WIRE[2]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node _out_T_156 = cat(out_hi, out_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    out <= _out_T_156 @[playground/src/exp6/BarrelShift.scala 28:7]
    node _ref_out_T = dshl(in.in, in.shamt) @[playground/src/exp6/BarrelShift.scala 30:39]
    node _ref_out_T_1 = bits(_ref_out_T, 3, 0) @[playground/src/exp6/BarrelShift.scala 30:51]
    node _ref_out_T_2 = asSInt(in.in) @[playground/src/exp6/BarrelShift.scala 31:28]
    node _ref_out_T_3 = dshr(_ref_out_T_2, in.shamt) @[playground/src/exp6/BarrelShift.scala 31:35]
    node _ref_out_T_4 = asUInt(_ref_out_T_3) @[playground/src/exp6/BarrelShift.scala 31:48]
    node _ref_out_T_5 = dshr(in.in, in.shamt) @[playground/src/exp6/BarrelShift.scala 31:62]
    node _ref_out_T_6 = mux(in.isArith, _ref_out_T_4, _ref_out_T_5) @[playground/src/exp6/BarrelShift.scala 31:8]
    node ref_out = mux(in.isLeft, _ref_out_T_1, _ref_out_T_6) @[playground/src/exp6/BarrelShift.scala 30:20]
    node _T = eq(out, ref_out) @[playground/src/exp6/BarrelShift.scala 32:14]
    node _T_1 = asUInt(reset) @[playground/src/exp6/BarrelShift.scala 32:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 32:9]
    when _T_2 : @[playground/src/exp6/BarrelShift.scala 32:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 32:9]
      when _T_3 : @[playground/src/exp6/BarrelShift.scala 32:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at BarrelShift.scala:32 assert(out === ref_out)\n") : printf @[playground/src/exp6/BarrelShift.scala 32:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/BarrelShift.scala 32:9]


  module BarrelShiftTest_1 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of BarrelShift_1 @[playground/src/exp6/BarrelShift.scala 36:17]
    m.clock <= clock
    m.reset <= reset
    reg cnt : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire finish_1 : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    finish_1 <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _wrap_wrap_T = mux(UInt<1>("h1"), UInt<8>("hff"), UInt<8>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node wrap_wrap = eq(cnt, _wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _wrap_value_T = add(cnt, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cnt <= _wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      finish_1 <= wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    wire _m_in_WIRE : { flip in : UInt<4>, flip shamt : UInt<2>, flip isLeft : UInt<1>, flip isArith : UInt<1>} @[playground/src/utils/Utils.scala 33:27]
    wire _m_in_WIRE_1 : UInt<8> @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE_1 <= cnt @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T = bits(_m_in_WIRE_1, 0, 0) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.isArith <= _m_in_T @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_1 = bits(_m_in_WIRE_1, 1, 1) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.isLeft <= _m_in_T_1 @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_2 = bits(_m_in_WIRE_1, 3, 2) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.shamt <= _m_in_T_2 @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_3 = bits(_m_in_WIRE_1, 7, 4) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.in <= _m_in_T_3 @[playground/src/utils/Utils.scala 33:27]
    m.in.isArith <= _m_in_WIRE.isArith @[playground/src/utils/Utils.scala 33:12]
    m.in.isLeft <= _m_in_WIRE.isLeft @[playground/src/utils/Utils.scala 33:12]
    m.in.shamt <= _m_in_WIRE.shamt @[playground/src/utils/Utils.scala 33:12]
    m.in.in <= _m_in_WIRE.in @[playground/src/utils/Utils.scala 33:12]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_1 = and(start, _T) @[playground/src/utils/Utils.scala 48:17]
    when _T_1 : @[playground/src/utils/Utils.scala 48:37]
      node _T_2 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_3 = eq(_T_2, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_3 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for BarrelShift-4bit, may finish after 256 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_4 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_5 = and(_T_4, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_5 : @[playground/src/utils/Utils.scala 52:32]
      node _T_6 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_7 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_8 = eq(_T_7, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_8 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: BarrelShift-4bit\n", _T_6) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module BarrelShift_2 :
    input clock : Clock
    input reset : UInt<1>
    output in : { flip in : UInt<8>, flip shamt : UInt<3>, flip isLeft : UInt<1>, flip isArith : UInt<1>} @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<8> @[playground/src/utils/Utils.scala 28:15]

    node _leftIn_T = bits(in.in, 7, 7) @[playground/src/exp6/BarrelShift.scala 16:37]
    node leftIn = mux(in.isArith, _leftIn_T, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 16:19]
    node _out_T = bits(in.in, 0, 0) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_1 = bits(in.in, 1, 1) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_2 = bits(in.in, 2, 2) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_3 = bits(in.in, 3, 3) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_4 = bits(in.in, 4, 4) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_5 = bits(in.in, 5, 5) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_6 = bits(in.in, 6, 6) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_7 = bits(in.in, 7, 7) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_8 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_9 = cat(in.isLeft, _out_T_8) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_10 = eq(_out_T_9, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_11 = and(_out_T_10, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_12 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_13 = cat(in.isLeft, _out_T_12) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_14 = eq(_out_T_13, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_15 = and(_out_T_14, _out_T_4) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_16 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_17 = cat(in.isLeft, _out_T_16) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_18 = eq(_out_T_17, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_19 = and(_out_T_18, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_20 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_21 = cat(in.isLeft, _out_T_20) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_22 = eq(_out_T_21, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_23 = and(_out_T_22, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_24 = or(_out_T_11, _out_T_15) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_25 = or(_out_T_24, _out_T_19) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_26 = or(_out_T_25, _out_T_23) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_27 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_28 = cat(in.isLeft, _out_T_27) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_29 = eq(_out_T_28, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_30 = and(_out_T_29, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_31 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_32 = cat(in.isLeft, _out_T_31) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_33 = eq(_out_T_32, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_34 = and(_out_T_33, _out_T_5) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_35 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_36 = cat(in.isLeft, _out_T_35) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_37 = eq(_out_T_36, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_38 = and(_out_T_37, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_39 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_40 = cat(in.isLeft, _out_T_39) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_41 = eq(_out_T_40, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_42 = and(_out_T_41, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_43 = or(_out_T_30, _out_T_34) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_44 = or(_out_T_43, _out_T_38) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_45 = or(_out_T_44, _out_T_42) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_46 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_47 = cat(in.isLeft, _out_T_46) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_48 = eq(_out_T_47, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_49 = and(_out_T_48, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_50 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_51 = cat(in.isLeft, _out_T_50) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_52 = eq(_out_T_51, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_53 = and(_out_T_52, _out_T_6) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_54 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_55 = cat(in.isLeft, _out_T_54) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_56 = eq(_out_T_55, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_57 = and(_out_T_56, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_58 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_59 = cat(in.isLeft, _out_T_58) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_60 = eq(_out_T_59, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_61 = and(_out_T_60, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_62 = or(_out_T_49, _out_T_53) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_63 = or(_out_T_62, _out_T_57) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_64 = or(_out_T_63, _out_T_61) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_65 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_66 = cat(in.isLeft, _out_T_65) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_67 = eq(_out_T_66, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_68 = and(_out_T_67, _out_T_3) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_69 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_70 = cat(in.isLeft, _out_T_69) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_71 = eq(_out_T_70, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_72 = and(_out_T_71, _out_T_7) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_73 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_74 = cat(in.isLeft, _out_T_73) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_75 = eq(_out_T_74, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_76 = and(_out_T_75, _out_T_3) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_77 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_78 = cat(in.isLeft, _out_T_77) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_79 = eq(_out_T_78, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_80 = and(_out_T_79, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_81 = or(_out_T_68, _out_T_72) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_82 = or(_out_T_81, _out_T_76) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_83 = or(_out_T_82, _out_T_80) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_84 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_85 = cat(in.isLeft, _out_T_84) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_86 = eq(_out_T_85, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_87 = and(_out_T_86, _out_T_4) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_88 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_89 = cat(in.isLeft, _out_T_88) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_90 = eq(_out_T_89, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_91 = and(_out_T_90, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_92 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_93 = cat(in.isLeft, _out_T_92) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_94 = eq(_out_T_93, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_95 = and(_out_T_94, _out_T_4) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_96 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_97 = cat(in.isLeft, _out_T_96) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_98 = eq(_out_T_97, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_99 = and(_out_T_98, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_100 = or(_out_T_87, _out_T_91) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_101 = or(_out_T_100, _out_T_95) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_102 = or(_out_T_101, _out_T_99) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_103 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_104 = cat(in.isLeft, _out_T_103) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_105 = eq(_out_T_104, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_106 = and(_out_T_105, _out_T_5) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_107 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_108 = cat(in.isLeft, _out_T_107) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_109 = eq(_out_T_108, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_110 = and(_out_T_109, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_111 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_112 = cat(in.isLeft, _out_T_111) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_113 = eq(_out_T_112, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_114 = and(_out_T_113, _out_T_5) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_115 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_116 = cat(in.isLeft, _out_T_115) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_117 = eq(_out_T_116, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_118 = and(_out_T_117, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_119 = or(_out_T_106, _out_T_110) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_120 = or(_out_T_119, _out_T_114) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_121 = or(_out_T_120, _out_T_118) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_122 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_123 = cat(in.isLeft, _out_T_122) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_124 = eq(_out_T_123, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_125 = and(_out_T_124, _out_T_6) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_126 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_127 = cat(in.isLeft, _out_T_126) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_128 = eq(_out_T_127, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_129 = and(_out_T_128, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_130 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_131 = cat(in.isLeft, _out_T_130) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_132 = eq(_out_T_131, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_133 = and(_out_T_132, _out_T_6) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_134 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_135 = cat(in.isLeft, _out_T_134) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_136 = eq(_out_T_135, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_137 = and(_out_T_136, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_138 = or(_out_T_125, _out_T_129) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_139 = or(_out_T_138, _out_T_133) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_140 = or(_out_T_139, _out_T_137) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_141 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_142 = cat(in.isLeft, _out_T_141) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_143 = eq(_out_T_142, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_144 = and(_out_T_143, _out_T_7) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_145 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_146 = cat(in.isLeft, _out_T_145) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_147 = eq(_out_T_146, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_148 = and(_out_T_147, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_149 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_150 = cat(in.isLeft, _out_T_149) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_151 = eq(_out_T_150, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_152 = and(_out_T_151, _out_T_7) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_153 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_154 = cat(in.isLeft, _out_T_153) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_155 = eq(_out_T_154, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_156 = and(_out_T_155, _out_T_3) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_157 = or(_out_T_144, _out_T_148) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_158 = or(_out_T_157, _out_T_152) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_159 = or(_out_T_158, _out_T_156) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_160 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_161 = cat(in.isLeft, _out_T_160) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_162 = eq(_out_T_161, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_163 = and(_out_T_162, _out_T_26) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_164 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_165 = cat(in.isLeft, _out_T_164) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_166 = eq(_out_T_165, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_167 = and(_out_T_166, _out_T_64) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_168 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_169 = cat(in.isLeft, _out_T_168) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_170 = eq(_out_T_169, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_171 = and(_out_T_170, _out_T_26) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_172 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_173 = cat(in.isLeft, _out_T_172) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_174 = eq(_out_T_173, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_175 = and(_out_T_174, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_176 = or(_out_T_163, _out_T_167) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_177 = or(_out_T_176, _out_T_171) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_178 = or(_out_T_177, _out_T_175) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_179 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_180 = cat(in.isLeft, _out_T_179) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_181 = eq(_out_T_180, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_182 = and(_out_T_181, _out_T_45) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_183 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_184 = cat(in.isLeft, _out_T_183) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_185 = eq(_out_T_184, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_186 = and(_out_T_185, _out_T_83) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_187 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_188 = cat(in.isLeft, _out_T_187) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_189 = eq(_out_T_188, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_190 = and(_out_T_189, _out_T_45) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_191 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_192 = cat(in.isLeft, _out_T_191) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_193 = eq(_out_T_192, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_194 = and(_out_T_193, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_195 = or(_out_T_182, _out_T_186) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_196 = or(_out_T_195, _out_T_190) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_197 = or(_out_T_196, _out_T_194) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_198 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_199 = cat(in.isLeft, _out_T_198) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_200 = eq(_out_T_199, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_201 = and(_out_T_200, _out_T_64) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_202 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_203 = cat(in.isLeft, _out_T_202) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_204 = eq(_out_T_203, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_205 = and(_out_T_204, _out_T_102) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_206 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_207 = cat(in.isLeft, _out_T_206) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_208 = eq(_out_T_207, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_209 = and(_out_T_208, _out_T_64) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_210 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_211 = cat(in.isLeft, _out_T_210) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_212 = eq(_out_T_211, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_213 = and(_out_T_212, _out_T_26) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_214 = or(_out_T_201, _out_T_205) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_215 = or(_out_T_214, _out_T_209) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_216 = or(_out_T_215, _out_T_213) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_217 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_218 = cat(in.isLeft, _out_T_217) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_219 = eq(_out_T_218, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_220 = and(_out_T_219, _out_T_83) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_221 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_222 = cat(in.isLeft, _out_T_221) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_223 = eq(_out_T_222, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_224 = and(_out_T_223, _out_T_121) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_225 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_226 = cat(in.isLeft, _out_T_225) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_227 = eq(_out_T_226, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_228 = and(_out_T_227, _out_T_83) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_229 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_230 = cat(in.isLeft, _out_T_229) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_231 = eq(_out_T_230, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_232 = and(_out_T_231, _out_T_45) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_233 = or(_out_T_220, _out_T_224) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_234 = or(_out_T_233, _out_T_228) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_235 = or(_out_T_234, _out_T_232) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_236 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_237 = cat(in.isLeft, _out_T_236) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_238 = eq(_out_T_237, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_239 = and(_out_T_238, _out_T_102) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_240 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_241 = cat(in.isLeft, _out_T_240) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_242 = eq(_out_T_241, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_243 = and(_out_T_242, _out_T_140) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_244 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_245 = cat(in.isLeft, _out_T_244) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_246 = eq(_out_T_245, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_247 = and(_out_T_246, _out_T_102) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_248 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_249 = cat(in.isLeft, _out_T_248) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_250 = eq(_out_T_249, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_251 = and(_out_T_250, _out_T_64) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_252 = or(_out_T_239, _out_T_243) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_253 = or(_out_T_252, _out_T_247) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_254 = or(_out_T_253, _out_T_251) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_255 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_256 = cat(in.isLeft, _out_T_255) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_257 = eq(_out_T_256, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_258 = and(_out_T_257, _out_T_121) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_259 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_260 = cat(in.isLeft, _out_T_259) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_261 = eq(_out_T_260, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_262 = and(_out_T_261, _out_T_159) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_263 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_264 = cat(in.isLeft, _out_T_263) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_265 = eq(_out_T_264, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_266 = and(_out_T_265, _out_T_121) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_267 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_268 = cat(in.isLeft, _out_T_267) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_269 = eq(_out_T_268, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_270 = and(_out_T_269, _out_T_83) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_271 = or(_out_T_258, _out_T_262) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_272 = or(_out_T_271, _out_T_266) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_273 = or(_out_T_272, _out_T_270) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_274 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_275 = cat(in.isLeft, _out_T_274) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_276 = eq(_out_T_275, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_277 = and(_out_T_276, _out_T_140) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_278 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_279 = cat(in.isLeft, _out_T_278) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_280 = eq(_out_T_279, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_281 = and(_out_T_280, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_282 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_283 = cat(in.isLeft, _out_T_282) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_284 = eq(_out_T_283, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_285 = and(_out_T_284, _out_T_140) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_286 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_287 = cat(in.isLeft, _out_T_286) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_288 = eq(_out_T_287, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_289 = and(_out_T_288, _out_T_102) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_290 = or(_out_T_277, _out_T_281) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_291 = or(_out_T_290, _out_T_285) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_292 = or(_out_T_291, _out_T_289) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_293 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_294 = cat(in.isLeft, _out_T_293) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_295 = eq(_out_T_294, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_296 = and(_out_T_295, _out_T_159) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_297 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_298 = cat(in.isLeft, _out_T_297) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_299 = eq(_out_T_298, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_300 = and(_out_T_299, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_301 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_302 = cat(in.isLeft, _out_T_301) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_303 = eq(_out_T_302, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_304 = and(_out_T_303, _out_T_159) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_305 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_306 = cat(in.isLeft, _out_T_305) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_307 = eq(_out_T_306, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_308 = and(_out_T_307, _out_T_121) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_309 = or(_out_T_296, _out_T_300) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_310 = or(_out_T_309, _out_T_304) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_311 = or(_out_T_310, _out_T_308) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_312 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_313 = cat(in.isLeft, _out_T_312) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_314 = eq(_out_T_313, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_315 = and(_out_T_314, _out_T_178) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_316 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_317 = cat(in.isLeft, _out_T_316) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_318 = eq(_out_T_317, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_319 = and(_out_T_318, _out_T_197) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_320 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_321 = cat(in.isLeft, _out_T_320) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_322 = eq(_out_T_321, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_323 = and(_out_T_322, _out_T_178) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_324 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_325 = cat(in.isLeft, _out_T_324) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_326 = eq(_out_T_325, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_327 = and(_out_T_326, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_328 = or(_out_T_315, _out_T_319) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_329 = or(_out_T_328, _out_T_323) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_330 = or(_out_T_329, _out_T_327) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_331 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_332 = cat(in.isLeft, _out_T_331) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_333 = eq(_out_T_332, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_334 = and(_out_T_333, _out_T_197) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_335 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_336 = cat(in.isLeft, _out_T_335) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_337 = eq(_out_T_336, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_338 = and(_out_T_337, _out_T_216) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_339 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_340 = cat(in.isLeft, _out_T_339) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_341 = eq(_out_T_340, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_342 = and(_out_T_341, _out_T_197) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_343 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_344 = cat(in.isLeft, _out_T_343) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_345 = eq(_out_T_344, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_346 = and(_out_T_345, _out_T_178) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_347 = or(_out_T_334, _out_T_338) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_348 = or(_out_T_347, _out_T_342) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_349 = or(_out_T_348, _out_T_346) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_350 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_351 = cat(in.isLeft, _out_T_350) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_352 = eq(_out_T_351, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_353 = and(_out_T_352, _out_T_216) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_354 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_355 = cat(in.isLeft, _out_T_354) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_356 = eq(_out_T_355, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_357 = and(_out_T_356, _out_T_235) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_358 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_359 = cat(in.isLeft, _out_T_358) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_360 = eq(_out_T_359, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_361 = and(_out_T_360, _out_T_216) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_362 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_363 = cat(in.isLeft, _out_T_362) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_364 = eq(_out_T_363, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_365 = and(_out_T_364, _out_T_197) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_366 = or(_out_T_353, _out_T_357) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_367 = or(_out_T_366, _out_T_361) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_368 = or(_out_T_367, _out_T_365) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_369 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_370 = cat(in.isLeft, _out_T_369) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_371 = eq(_out_T_370, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_372 = and(_out_T_371, _out_T_235) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_373 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_374 = cat(in.isLeft, _out_T_373) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_375 = eq(_out_T_374, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_376 = and(_out_T_375, _out_T_254) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_377 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_378 = cat(in.isLeft, _out_T_377) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_379 = eq(_out_T_378, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_380 = and(_out_T_379, _out_T_235) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_381 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_382 = cat(in.isLeft, _out_T_381) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_383 = eq(_out_T_382, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_384 = and(_out_T_383, _out_T_216) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_385 = or(_out_T_372, _out_T_376) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_386 = or(_out_T_385, _out_T_380) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_387 = or(_out_T_386, _out_T_384) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_388 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_389 = cat(in.isLeft, _out_T_388) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_390 = eq(_out_T_389, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_391 = and(_out_T_390, _out_T_254) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_392 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_393 = cat(in.isLeft, _out_T_392) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_394 = eq(_out_T_393, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_395 = and(_out_T_394, _out_T_273) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_396 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_397 = cat(in.isLeft, _out_T_396) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_398 = eq(_out_T_397, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_399 = and(_out_T_398, _out_T_254) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_400 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_401 = cat(in.isLeft, _out_T_400) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_402 = eq(_out_T_401, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_403 = and(_out_T_402, _out_T_235) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_404 = or(_out_T_391, _out_T_395) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_405 = or(_out_T_404, _out_T_399) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_406 = or(_out_T_405, _out_T_403) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_407 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_408 = cat(in.isLeft, _out_T_407) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_409 = eq(_out_T_408, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_410 = and(_out_T_409, _out_T_273) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_411 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_412 = cat(in.isLeft, _out_T_411) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_413 = eq(_out_T_412, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_414 = and(_out_T_413, _out_T_292) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_415 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_416 = cat(in.isLeft, _out_T_415) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_417 = eq(_out_T_416, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_418 = and(_out_T_417, _out_T_273) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_419 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_420 = cat(in.isLeft, _out_T_419) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_421 = eq(_out_T_420, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_422 = and(_out_T_421, _out_T_254) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_423 = or(_out_T_410, _out_T_414) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_424 = or(_out_T_423, _out_T_418) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_425 = or(_out_T_424, _out_T_422) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_426 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_427 = cat(in.isLeft, _out_T_426) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_428 = eq(_out_T_427, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_429 = and(_out_T_428, _out_T_292) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_430 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_431 = cat(in.isLeft, _out_T_430) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_432 = eq(_out_T_431, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_433 = and(_out_T_432, _out_T_311) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_434 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_435 = cat(in.isLeft, _out_T_434) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_436 = eq(_out_T_435, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_437 = and(_out_T_436, _out_T_292) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_438 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_439 = cat(in.isLeft, _out_T_438) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_440 = eq(_out_T_439, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_441 = and(_out_T_440, _out_T_273) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_442 = or(_out_T_429, _out_T_433) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_443 = or(_out_T_442, _out_T_437) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_444 = or(_out_T_443, _out_T_441) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_445 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_446 = cat(in.isLeft, _out_T_445) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_447 = eq(_out_T_446, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_448 = and(_out_T_447, _out_T_311) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_449 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_450 = cat(in.isLeft, _out_T_449) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_451 = eq(_out_T_450, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_452 = and(_out_T_451, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_453 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_454 = cat(in.isLeft, _out_T_453) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_455 = eq(_out_T_454, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_456 = and(_out_T_455, _out_T_311) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_457 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_458 = cat(in.isLeft, _out_T_457) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_459 = eq(_out_T_458, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_460 = and(_out_T_459, _out_T_292) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_461 = or(_out_T_448, _out_T_452) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_462 = or(_out_T_461, _out_T_456) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_463 = or(_out_T_462, _out_T_460) @[playground/src/exp6/BarrelShift.scala 24:73]
    wire _out_WIRE : UInt<1>[8] @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[0] <= _out_T_330 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[1] <= _out_T_349 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[2] <= _out_T_368 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[3] <= _out_T_387 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[4] <= _out_T_406 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[5] <= _out_T_425 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[6] <= _out_T_444 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[7] <= _out_T_463 @[playground/src/exp6/BarrelShift.scala 28:17]
    node out_lo_lo = cat(_out_WIRE[1], _out_WIRE[0]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_lo_hi = cat(_out_WIRE[3], _out_WIRE[2]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_lo = cat(out_lo_hi, out_lo_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi_lo = cat(_out_WIRE[5], _out_WIRE[4]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi_hi = cat(_out_WIRE[7], _out_WIRE[6]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi = cat(out_hi_hi, out_hi_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    node _out_T_464 = cat(out_hi, out_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    out <= _out_T_464 @[playground/src/exp6/BarrelShift.scala 28:7]
    node _ref_out_T = dshl(in.in, in.shamt) @[playground/src/exp6/BarrelShift.scala 30:39]
    node _ref_out_T_1 = bits(_ref_out_T, 7, 0) @[playground/src/exp6/BarrelShift.scala 30:51]
    node _ref_out_T_2 = asSInt(in.in) @[playground/src/exp6/BarrelShift.scala 31:28]
    node _ref_out_T_3 = dshr(_ref_out_T_2, in.shamt) @[playground/src/exp6/BarrelShift.scala 31:35]
    node _ref_out_T_4 = asUInt(_ref_out_T_3) @[playground/src/exp6/BarrelShift.scala 31:48]
    node _ref_out_T_5 = dshr(in.in, in.shamt) @[playground/src/exp6/BarrelShift.scala 31:62]
    node _ref_out_T_6 = mux(in.isArith, _ref_out_T_4, _ref_out_T_5) @[playground/src/exp6/BarrelShift.scala 31:8]
    node ref_out = mux(in.isLeft, _ref_out_T_1, _ref_out_T_6) @[playground/src/exp6/BarrelShift.scala 30:20]
    node _T = eq(out, ref_out) @[playground/src/exp6/BarrelShift.scala 32:14]
    node _T_1 = asUInt(reset) @[playground/src/exp6/BarrelShift.scala 32:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 32:9]
    when _T_2 : @[playground/src/exp6/BarrelShift.scala 32:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 32:9]
      when _T_3 : @[playground/src/exp6/BarrelShift.scala 32:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at BarrelShift.scala:32 assert(out === ref_out)\n") : printf @[playground/src/exp6/BarrelShift.scala 32:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/BarrelShift.scala 32:9]


  module BarrelShiftTest_2 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of BarrelShift_2 @[playground/src/exp6/BarrelShift.scala 36:17]
    m.clock <= clock
    m.reset <= reset
    reg cnt : UInt<13>, clock with :
      reset => (reset, UInt<13>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire finish_1 : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    finish_1 <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _wrap_wrap_T = mux(UInt<1>("h1"), UInt<13>("h1fff"), UInt<13>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node wrap_wrap = eq(cnt, _wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _wrap_value_T = add(cnt, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cnt <= _wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      finish_1 <= wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    wire _m_in_WIRE : { flip in : UInt<8>, flip shamt : UInt<3>, flip isLeft : UInt<1>, flip isArith : UInt<1>} @[playground/src/utils/Utils.scala 33:27]
    wire _m_in_WIRE_1 : UInt<13> @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE_1 <= cnt @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T = bits(_m_in_WIRE_1, 0, 0) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.isArith <= _m_in_T @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_1 = bits(_m_in_WIRE_1, 1, 1) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.isLeft <= _m_in_T_1 @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_2 = bits(_m_in_WIRE_1, 4, 2) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.shamt <= _m_in_T_2 @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_3 = bits(_m_in_WIRE_1, 12, 5) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.in <= _m_in_T_3 @[playground/src/utils/Utils.scala 33:27]
    m.in.isArith <= _m_in_WIRE.isArith @[playground/src/utils/Utils.scala 33:12]
    m.in.isLeft <= _m_in_WIRE.isLeft @[playground/src/utils/Utils.scala 33:12]
    m.in.shamt <= _m_in_WIRE.shamt @[playground/src/utils/Utils.scala 33:12]
    m.in.in <= _m_in_WIRE.in @[playground/src/utils/Utils.scala 33:12]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_1 = and(start, _T) @[playground/src/utils/Utils.scala 48:17]
    when _T_1 : @[playground/src/utils/Utils.scala 48:37]
      node _T_2 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_3 = eq(_T_2, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_3 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for BarrelShift-8bit, may finish after 8192 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_4 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_5 = and(_T_4, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_5 : @[playground/src/utils/Utils.scala 52:32]
      node _T_6 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_7 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_8 = eq(_T_7, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_8 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: BarrelShift-8bit\n", _T_6) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module BarrelShift_3 :
    input clock : Clock
    input reset : UInt<1>
    output in : { flip in : UInt<16>, flip shamt : UInt<4>, flip isLeft : UInt<1>, flip isArith : UInt<1>} @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<16> @[playground/src/utils/Utils.scala 28:15]

    node _leftIn_T = bits(in.in, 15, 15) @[playground/src/exp6/BarrelShift.scala 16:37]
    node leftIn = mux(in.isArith, _leftIn_T, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 16:19]
    node _out_T = bits(in.in, 0, 0) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_1 = bits(in.in, 1, 1) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_2 = bits(in.in, 2, 2) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_3 = bits(in.in, 3, 3) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_4 = bits(in.in, 4, 4) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_5 = bits(in.in, 5, 5) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_6 = bits(in.in, 6, 6) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_7 = bits(in.in, 7, 7) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_8 = bits(in.in, 8, 8) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_9 = bits(in.in, 9, 9) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_10 = bits(in.in, 10, 10) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_11 = bits(in.in, 11, 11) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_12 = bits(in.in, 12, 12) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_13 = bits(in.in, 13, 13) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_14 = bits(in.in, 14, 14) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_15 = bits(in.in, 15, 15) @[playground/src/exp6/BarrelShift.scala 28:36]
    node _out_T_16 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_17 = cat(in.isLeft, _out_T_16) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_18 = eq(_out_T_17, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_19 = and(_out_T_18, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_20 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_21 = cat(in.isLeft, _out_T_20) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_22 = eq(_out_T_21, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_23 = and(_out_T_22, _out_T_8) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_24 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_25 = cat(in.isLeft, _out_T_24) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_26 = eq(_out_T_25, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_27 = and(_out_T_26, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_28 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_29 = cat(in.isLeft, _out_T_28) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_30 = eq(_out_T_29, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_31 = and(_out_T_30, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_32 = or(_out_T_19, _out_T_23) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_33 = or(_out_T_32, _out_T_27) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_34 = or(_out_T_33, _out_T_31) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_35 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_36 = cat(in.isLeft, _out_T_35) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_37 = eq(_out_T_36, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_38 = and(_out_T_37, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_39 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_40 = cat(in.isLeft, _out_T_39) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_41 = eq(_out_T_40, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_42 = and(_out_T_41, _out_T_9) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_43 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_44 = cat(in.isLeft, _out_T_43) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_45 = eq(_out_T_44, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_46 = and(_out_T_45, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_47 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_48 = cat(in.isLeft, _out_T_47) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_49 = eq(_out_T_48, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_50 = and(_out_T_49, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_51 = or(_out_T_38, _out_T_42) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_52 = or(_out_T_51, _out_T_46) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_53 = or(_out_T_52, _out_T_50) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_54 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_55 = cat(in.isLeft, _out_T_54) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_56 = eq(_out_T_55, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_57 = and(_out_T_56, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_58 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_59 = cat(in.isLeft, _out_T_58) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_60 = eq(_out_T_59, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_61 = and(_out_T_60, _out_T_10) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_62 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_63 = cat(in.isLeft, _out_T_62) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_64 = eq(_out_T_63, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_65 = and(_out_T_64, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_66 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_67 = cat(in.isLeft, _out_T_66) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_68 = eq(_out_T_67, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_69 = and(_out_T_68, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_70 = or(_out_T_57, _out_T_61) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_71 = or(_out_T_70, _out_T_65) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_72 = or(_out_T_71, _out_T_69) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_73 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_74 = cat(in.isLeft, _out_T_73) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_75 = eq(_out_T_74, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_76 = and(_out_T_75, _out_T_3) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_77 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_78 = cat(in.isLeft, _out_T_77) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_79 = eq(_out_T_78, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_80 = and(_out_T_79, _out_T_11) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_81 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_82 = cat(in.isLeft, _out_T_81) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_83 = eq(_out_T_82, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_84 = and(_out_T_83, _out_T_3) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_85 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_86 = cat(in.isLeft, _out_T_85) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_87 = eq(_out_T_86, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_88 = and(_out_T_87, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_89 = or(_out_T_76, _out_T_80) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_90 = or(_out_T_89, _out_T_84) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_91 = or(_out_T_90, _out_T_88) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_92 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_93 = cat(in.isLeft, _out_T_92) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_94 = eq(_out_T_93, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_95 = and(_out_T_94, _out_T_4) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_96 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_97 = cat(in.isLeft, _out_T_96) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_98 = eq(_out_T_97, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_99 = and(_out_T_98, _out_T_12) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_100 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_101 = cat(in.isLeft, _out_T_100) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_102 = eq(_out_T_101, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_103 = and(_out_T_102, _out_T_4) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_104 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_105 = cat(in.isLeft, _out_T_104) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_106 = eq(_out_T_105, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_107 = and(_out_T_106, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_108 = or(_out_T_95, _out_T_99) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_109 = or(_out_T_108, _out_T_103) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_110 = or(_out_T_109, _out_T_107) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_111 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_112 = cat(in.isLeft, _out_T_111) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_113 = eq(_out_T_112, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_114 = and(_out_T_113, _out_T_5) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_115 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_116 = cat(in.isLeft, _out_T_115) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_117 = eq(_out_T_116, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_118 = and(_out_T_117, _out_T_13) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_119 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_120 = cat(in.isLeft, _out_T_119) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_121 = eq(_out_T_120, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_122 = and(_out_T_121, _out_T_5) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_123 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_124 = cat(in.isLeft, _out_T_123) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_125 = eq(_out_T_124, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_126 = and(_out_T_125, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_127 = or(_out_T_114, _out_T_118) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_128 = or(_out_T_127, _out_T_122) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_129 = or(_out_T_128, _out_T_126) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_130 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_131 = cat(in.isLeft, _out_T_130) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_132 = eq(_out_T_131, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_133 = and(_out_T_132, _out_T_6) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_134 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_135 = cat(in.isLeft, _out_T_134) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_136 = eq(_out_T_135, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_137 = and(_out_T_136, _out_T_14) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_138 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_139 = cat(in.isLeft, _out_T_138) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_140 = eq(_out_T_139, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_141 = and(_out_T_140, _out_T_6) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_142 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_143 = cat(in.isLeft, _out_T_142) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_144 = eq(_out_T_143, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_145 = and(_out_T_144, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_146 = or(_out_T_133, _out_T_137) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_147 = or(_out_T_146, _out_T_141) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_148 = or(_out_T_147, _out_T_145) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_149 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_150 = cat(in.isLeft, _out_T_149) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_151 = eq(_out_T_150, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_152 = and(_out_T_151, _out_T_7) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_153 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_154 = cat(in.isLeft, _out_T_153) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_155 = eq(_out_T_154, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_156 = and(_out_T_155, _out_T_15) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_157 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_158 = cat(in.isLeft, _out_T_157) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_159 = eq(_out_T_158, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_160 = and(_out_T_159, _out_T_7) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_161 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_162 = cat(in.isLeft, _out_T_161) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_163 = eq(_out_T_162, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_164 = and(_out_T_163, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_165 = or(_out_T_152, _out_T_156) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_166 = or(_out_T_165, _out_T_160) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_167 = or(_out_T_166, _out_T_164) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_168 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_169 = cat(in.isLeft, _out_T_168) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_170 = eq(_out_T_169, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_171 = and(_out_T_170, _out_T_8) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_172 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_173 = cat(in.isLeft, _out_T_172) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_174 = eq(_out_T_173, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_175 = and(_out_T_174, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_176 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_177 = cat(in.isLeft, _out_T_176) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_178 = eq(_out_T_177, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_179 = and(_out_T_178, _out_T_8) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_180 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_181 = cat(in.isLeft, _out_T_180) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_182 = eq(_out_T_181, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_183 = and(_out_T_182, _out_T) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_184 = or(_out_T_171, _out_T_175) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_185 = or(_out_T_184, _out_T_179) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_186 = or(_out_T_185, _out_T_183) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_187 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_188 = cat(in.isLeft, _out_T_187) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_189 = eq(_out_T_188, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_190 = and(_out_T_189, _out_T_9) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_191 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_192 = cat(in.isLeft, _out_T_191) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_193 = eq(_out_T_192, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_194 = and(_out_T_193, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_195 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_196 = cat(in.isLeft, _out_T_195) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_197 = eq(_out_T_196, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_198 = and(_out_T_197, _out_T_9) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_199 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_200 = cat(in.isLeft, _out_T_199) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_201 = eq(_out_T_200, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_202 = and(_out_T_201, _out_T_1) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_203 = or(_out_T_190, _out_T_194) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_204 = or(_out_T_203, _out_T_198) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_205 = or(_out_T_204, _out_T_202) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_206 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_207 = cat(in.isLeft, _out_T_206) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_208 = eq(_out_T_207, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_209 = and(_out_T_208, _out_T_10) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_210 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_211 = cat(in.isLeft, _out_T_210) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_212 = eq(_out_T_211, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_213 = and(_out_T_212, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_214 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_215 = cat(in.isLeft, _out_T_214) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_216 = eq(_out_T_215, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_217 = and(_out_T_216, _out_T_10) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_218 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_219 = cat(in.isLeft, _out_T_218) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_220 = eq(_out_T_219, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_221 = and(_out_T_220, _out_T_2) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_222 = or(_out_T_209, _out_T_213) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_223 = or(_out_T_222, _out_T_217) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_224 = or(_out_T_223, _out_T_221) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_225 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_226 = cat(in.isLeft, _out_T_225) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_227 = eq(_out_T_226, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_228 = and(_out_T_227, _out_T_11) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_229 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_230 = cat(in.isLeft, _out_T_229) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_231 = eq(_out_T_230, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_232 = and(_out_T_231, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_233 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_234 = cat(in.isLeft, _out_T_233) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_235 = eq(_out_T_234, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_236 = and(_out_T_235, _out_T_11) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_237 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_238 = cat(in.isLeft, _out_T_237) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_239 = eq(_out_T_238, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_240 = and(_out_T_239, _out_T_3) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_241 = or(_out_T_228, _out_T_232) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_242 = or(_out_T_241, _out_T_236) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_243 = or(_out_T_242, _out_T_240) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_244 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_245 = cat(in.isLeft, _out_T_244) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_246 = eq(_out_T_245, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_247 = and(_out_T_246, _out_T_12) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_248 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_249 = cat(in.isLeft, _out_T_248) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_250 = eq(_out_T_249, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_251 = and(_out_T_250, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_252 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_253 = cat(in.isLeft, _out_T_252) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_254 = eq(_out_T_253, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_255 = and(_out_T_254, _out_T_12) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_256 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_257 = cat(in.isLeft, _out_T_256) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_258 = eq(_out_T_257, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_259 = and(_out_T_258, _out_T_4) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_260 = or(_out_T_247, _out_T_251) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_261 = or(_out_T_260, _out_T_255) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_262 = or(_out_T_261, _out_T_259) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_263 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_264 = cat(in.isLeft, _out_T_263) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_265 = eq(_out_T_264, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_266 = and(_out_T_265, _out_T_13) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_267 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_268 = cat(in.isLeft, _out_T_267) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_269 = eq(_out_T_268, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_270 = and(_out_T_269, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_271 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_272 = cat(in.isLeft, _out_T_271) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_273 = eq(_out_T_272, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_274 = and(_out_T_273, _out_T_13) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_275 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_276 = cat(in.isLeft, _out_T_275) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_277 = eq(_out_T_276, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_278 = and(_out_T_277, _out_T_5) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_279 = or(_out_T_266, _out_T_270) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_280 = or(_out_T_279, _out_T_274) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_281 = or(_out_T_280, _out_T_278) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_282 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_283 = cat(in.isLeft, _out_T_282) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_284 = eq(_out_T_283, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_285 = and(_out_T_284, _out_T_14) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_286 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_287 = cat(in.isLeft, _out_T_286) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_288 = eq(_out_T_287, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_289 = and(_out_T_288, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_290 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_291 = cat(in.isLeft, _out_T_290) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_292 = eq(_out_T_291, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_293 = and(_out_T_292, _out_T_14) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_294 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_295 = cat(in.isLeft, _out_T_294) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_296 = eq(_out_T_295, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_297 = and(_out_T_296, _out_T_6) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_298 = or(_out_T_285, _out_T_289) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_299 = or(_out_T_298, _out_T_293) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_300 = or(_out_T_299, _out_T_297) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_301 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_302 = cat(in.isLeft, _out_T_301) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_303 = eq(_out_T_302, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_304 = and(_out_T_303, _out_T_15) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_305 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_306 = cat(in.isLeft, _out_T_305) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_307 = eq(_out_T_306, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_308 = and(_out_T_307, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_309 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_310 = cat(in.isLeft, _out_T_309) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_311 = eq(_out_T_310, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_312 = and(_out_T_311, _out_T_15) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_313 = bits(in.shamt, 3, 3) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_314 = cat(in.isLeft, _out_T_313) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_315 = eq(_out_T_314, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_316 = and(_out_T_315, _out_T_7) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_317 = or(_out_T_304, _out_T_308) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_318 = or(_out_T_317, _out_T_312) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_319 = or(_out_T_318, _out_T_316) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_320 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_321 = cat(in.isLeft, _out_T_320) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_322 = eq(_out_T_321, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_323 = and(_out_T_322, _out_T_34) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_324 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_325 = cat(in.isLeft, _out_T_324) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_326 = eq(_out_T_325, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_327 = and(_out_T_326, _out_T_110) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_328 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_329 = cat(in.isLeft, _out_T_328) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_330 = eq(_out_T_329, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_331 = and(_out_T_330, _out_T_34) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_332 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_333 = cat(in.isLeft, _out_T_332) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_334 = eq(_out_T_333, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_335 = and(_out_T_334, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_336 = or(_out_T_323, _out_T_327) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_337 = or(_out_T_336, _out_T_331) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_338 = or(_out_T_337, _out_T_335) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_339 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_340 = cat(in.isLeft, _out_T_339) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_341 = eq(_out_T_340, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_342 = and(_out_T_341, _out_T_53) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_343 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_344 = cat(in.isLeft, _out_T_343) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_345 = eq(_out_T_344, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_346 = and(_out_T_345, _out_T_129) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_347 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_348 = cat(in.isLeft, _out_T_347) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_349 = eq(_out_T_348, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_350 = and(_out_T_349, _out_T_53) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_351 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_352 = cat(in.isLeft, _out_T_351) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_353 = eq(_out_T_352, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_354 = and(_out_T_353, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_355 = or(_out_T_342, _out_T_346) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_356 = or(_out_T_355, _out_T_350) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_357 = or(_out_T_356, _out_T_354) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_358 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_359 = cat(in.isLeft, _out_T_358) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_360 = eq(_out_T_359, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_361 = and(_out_T_360, _out_T_72) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_362 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_363 = cat(in.isLeft, _out_T_362) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_364 = eq(_out_T_363, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_365 = and(_out_T_364, _out_T_148) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_366 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_367 = cat(in.isLeft, _out_T_366) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_368 = eq(_out_T_367, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_369 = and(_out_T_368, _out_T_72) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_370 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_371 = cat(in.isLeft, _out_T_370) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_372 = eq(_out_T_371, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_373 = and(_out_T_372, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_374 = or(_out_T_361, _out_T_365) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_375 = or(_out_T_374, _out_T_369) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_376 = or(_out_T_375, _out_T_373) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_377 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_378 = cat(in.isLeft, _out_T_377) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_379 = eq(_out_T_378, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_380 = and(_out_T_379, _out_T_91) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_381 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_382 = cat(in.isLeft, _out_T_381) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_383 = eq(_out_T_382, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_384 = and(_out_T_383, _out_T_167) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_385 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_386 = cat(in.isLeft, _out_T_385) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_387 = eq(_out_T_386, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_388 = and(_out_T_387, _out_T_91) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_389 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_390 = cat(in.isLeft, _out_T_389) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_391 = eq(_out_T_390, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_392 = and(_out_T_391, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_393 = or(_out_T_380, _out_T_384) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_394 = or(_out_T_393, _out_T_388) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_395 = or(_out_T_394, _out_T_392) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_396 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_397 = cat(in.isLeft, _out_T_396) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_398 = eq(_out_T_397, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_399 = and(_out_T_398, _out_T_110) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_400 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_401 = cat(in.isLeft, _out_T_400) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_402 = eq(_out_T_401, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_403 = and(_out_T_402, _out_T_186) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_404 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_405 = cat(in.isLeft, _out_T_404) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_406 = eq(_out_T_405, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_407 = and(_out_T_406, _out_T_110) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_408 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_409 = cat(in.isLeft, _out_T_408) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_410 = eq(_out_T_409, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_411 = and(_out_T_410, _out_T_34) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_412 = or(_out_T_399, _out_T_403) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_413 = or(_out_T_412, _out_T_407) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_414 = or(_out_T_413, _out_T_411) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_415 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_416 = cat(in.isLeft, _out_T_415) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_417 = eq(_out_T_416, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_418 = and(_out_T_417, _out_T_129) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_419 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_420 = cat(in.isLeft, _out_T_419) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_421 = eq(_out_T_420, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_422 = and(_out_T_421, _out_T_205) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_423 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_424 = cat(in.isLeft, _out_T_423) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_425 = eq(_out_T_424, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_426 = and(_out_T_425, _out_T_129) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_427 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_428 = cat(in.isLeft, _out_T_427) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_429 = eq(_out_T_428, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_430 = and(_out_T_429, _out_T_53) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_431 = or(_out_T_418, _out_T_422) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_432 = or(_out_T_431, _out_T_426) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_433 = or(_out_T_432, _out_T_430) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_434 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_435 = cat(in.isLeft, _out_T_434) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_436 = eq(_out_T_435, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_437 = and(_out_T_436, _out_T_148) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_438 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_439 = cat(in.isLeft, _out_T_438) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_440 = eq(_out_T_439, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_441 = and(_out_T_440, _out_T_224) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_442 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_443 = cat(in.isLeft, _out_T_442) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_444 = eq(_out_T_443, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_445 = and(_out_T_444, _out_T_148) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_446 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_447 = cat(in.isLeft, _out_T_446) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_448 = eq(_out_T_447, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_449 = and(_out_T_448, _out_T_72) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_450 = or(_out_T_437, _out_T_441) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_451 = or(_out_T_450, _out_T_445) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_452 = or(_out_T_451, _out_T_449) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_453 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_454 = cat(in.isLeft, _out_T_453) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_455 = eq(_out_T_454, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_456 = and(_out_T_455, _out_T_167) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_457 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_458 = cat(in.isLeft, _out_T_457) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_459 = eq(_out_T_458, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_460 = and(_out_T_459, _out_T_243) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_461 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_462 = cat(in.isLeft, _out_T_461) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_463 = eq(_out_T_462, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_464 = and(_out_T_463, _out_T_167) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_465 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_466 = cat(in.isLeft, _out_T_465) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_467 = eq(_out_T_466, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_468 = and(_out_T_467, _out_T_91) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_469 = or(_out_T_456, _out_T_460) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_470 = or(_out_T_469, _out_T_464) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_471 = or(_out_T_470, _out_T_468) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_472 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_473 = cat(in.isLeft, _out_T_472) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_474 = eq(_out_T_473, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_475 = and(_out_T_474, _out_T_186) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_476 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_477 = cat(in.isLeft, _out_T_476) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_478 = eq(_out_T_477, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_479 = and(_out_T_478, _out_T_262) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_480 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_481 = cat(in.isLeft, _out_T_480) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_482 = eq(_out_T_481, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_483 = and(_out_T_482, _out_T_186) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_484 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_485 = cat(in.isLeft, _out_T_484) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_486 = eq(_out_T_485, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_487 = and(_out_T_486, _out_T_110) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_488 = or(_out_T_475, _out_T_479) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_489 = or(_out_T_488, _out_T_483) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_490 = or(_out_T_489, _out_T_487) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_491 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_492 = cat(in.isLeft, _out_T_491) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_493 = eq(_out_T_492, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_494 = and(_out_T_493, _out_T_205) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_495 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_496 = cat(in.isLeft, _out_T_495) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_497 = eq(_out_T_496, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_498 = and(_out_T_497, _out_T_281) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_499 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_500 = cat(in.isLeft, _out_T_499) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_501 = eq(_out_T_500, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_502 = and(_out_T_501, _out_T_205) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_503 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_504 = cat(in.isLeft, _out_T_503) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_505 = eq(_out_T_504, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_506 = and(_out_T_505, _out_T_129) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_507 = or(_out_T_494, _out_T_498) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_508 = or(_out_T_507, _out_T_502) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_509 = or(_out_T_508, _out_T_506) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_510 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_511 = cat(in.isLeft, _out_T_510) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_512 = eq(_out_T_511, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_513 = and(_out_T_512, _out_T_224) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_514 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_515 = cat(in.isLeft, _out_T_514) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_516 = eq(_out_T_515, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_517 = and(_out_T_516, _out_T_300) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_518 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_519 = cat(in.isLeft, _out_T_518) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_520 = eq(_out_T_519, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_521 = and(_out_T_520, _out_T_224) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_522 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_523 = cat(in.isLeft, _out_T_522) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_524 = eq(_out_T_523, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_525 = and(_out_T_524, _out_T_148) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_526 = or(_out_T_513, _out_T_517) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_527 = or(_out_T_526, _out_T_521) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_528 = or(_out_T_527, _out_T_525) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_529 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_530 = cat(in.isLeft, _out_T_529) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_531 = eq(_out_T_530, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_532 = and(_out_T_531, _out_T_243) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_533 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_534 = cat(in.isLeft, _out_T_533) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_535 = eq(_out_T_534, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_536 = and(_out_T_535, _out_T_319) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_537 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_538 = cat(in.isLeft, _out_T_537) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_539 = eq(_out_T_538, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_540 = and(_out_T_539, _out_T_243) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_541 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_542 = cat(in.isLeft, _out_T_541) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_543 = eq(_out_T_542, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_544 = and(_out_T_543, _out_T_167) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_545 = or(_out_T_532, _out_T_536) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_546 = or(_out_T_545, _out_T_540) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_547 = or(_out_T_546, _out_T_544) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_548 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_549 = cat(in.isLeft, _out_T_548) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_550 = eq(_out_T_549, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_551 = and(_out_T_550, _out_T_262) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_552 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_553 = cat(in.isLeft, _out_T_552) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_554 = eq(_out_T_553, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_555 = and(_out_T_554, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_556 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_557 = cat(in.isLeft, _out_T_556) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_558 = eq(_out_T_557, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_559 = and(_out_T_558, _out_T_262) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_560 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_561 = cat(in.isLeft, _out_T_560) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_562 = eq(_out_T_561, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_563 = and(_out_T_562, _out_T_186) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_564 = or(_out_T_551, _out_T_555) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_565 = or(_out_T_564, _out_T_559) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_566 = or(_out_T_565, _out_T_563) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_567 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_568 = cat(in.isLeft, _out_T_567) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_569 = eq(_out_T_568, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_570 = and(_out_T_569, _out_T_281) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_571 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_572 = cat(in.isLeft, _out_T_571) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_573 = eq(_out_T_572, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_574 = and(_out_T_573, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_575 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_576 = cat(in.isLeft, _out_T_575) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_577 = eq(_out_T_576, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_578 = and(_out_T_577, _out_T_281) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_579 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_580 = cat(in.isLeft, _out_T_579) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_581 = eq(_out_T_580, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_582 = and(_out_T_581, _out_T_205) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_583 = or(_out_T_570, _out_T_574) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_584 = or(_out_T_583, _out_T_578) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_585 = or(_out_T_584, _out_T_582) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_586 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_587 = cat(in.isLeft, _out_T_586) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_588 = eq(_out_T_587, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_589 = and(_out_T_588, _out_T_300) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_590 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_591 = cat(in.isLeft, _out_T_590) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_592 = eq(_out_T_591, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_593 = and(_out_T_592, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_594 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_595 = cat(in.isLeft, _out_T_594) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_596 = eq(_out_T_595, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_597 = and(_out_T_596, _out_T_300) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_598 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_599 = cat(in.isLeft, _out_T_598) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_600 = eq(_out_T_599, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_601 = and(_out_T_600, _out_T_224) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_602 = or(_out_T_589, _out_T_593) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_603 = or(_out_T_602, _out_T_597) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_604 = or(_out_T_603, _out_T_601) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_605 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_606 = cat(in.isLeft, _out_T_605) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_607 = eq(_out_T_606, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_608 = and(_out_T_607, _out_T_319) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_609 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_610 = cat(in.isLeft, _out_T_609) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_611 = eq(_out_T_610, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_612 = and(_out_T_611, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_613 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_614 = cat(in.isLeft, _out_T_613) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_615 = eq(_out_T_614, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_616 = and(_out_T_615, _out_T_319) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_617 = bits(in.shamt, 2, 2) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_618 = cat(in.isLeft, _out_T_617) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_619 = eq(_out_T_618, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_620 = and(_out_T_619, _out_T_243) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_621 = or(_out_T_608, _out_T_612) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_622 = or(_out_T_621, _out_T_616) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_623 = or(_out_T_622, _out_T_620) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_624 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_625 = cat(in.isLeft, _out_T_624) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_626 = eq(_out_T_625, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_627 = and(_out_T_626, _out_T_338) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_628 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_629 = cat(in.isLeft, _out_T_628) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_630 = eq(_out_T_629, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_631 = and(_out_T_630, _out_T_376) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_632 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_633 = cat(in.isLeft, _out_T_632) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_634 = eq(_out_T_633, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_635 = and(_out_T_634, _out_T_338) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_636 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_637 = cat(in.isLeft, _out_T_636) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_638 = eq(_out_T_637, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_639 = and(_out_T_638, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_640 = or(_out_T_627, _out_T_631) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_641 = or(_out_T_640, _out_T_635) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_642 = or(_out_T_641, _out_T_639) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_643 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_644 = cat(in.isLeft, _out_T_643) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_645 = eq(_out_T_644, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_646 = and(_out_T_645, _out_T_357) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_647 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_648 = cat(in.isLeft, _out_T_647) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_649 = eq(_out_T_648, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_650 = and(_out_T_649, _out_T_395) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_651 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_652 = cat(in.isLeft, _out_T_651) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_653 = eq(_out_T_652, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_654 = and(_out_T_653, _out_T_357) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_655 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_656 = cat(in.isLeft, _out_T_655) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_657 = eq(_out_T_656, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_658 = and(_out_T_657, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_659 = or(_out_T_646, _out_T_650) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_660 = or(_out_T_659, _out_T_654) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_661 = or(_out_T_660, _out_T_658) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_662 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_663 = cat(in.isLeft, _out_T_662) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_664 = eq(_out_T_663, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_665 = and(_out_T_664, _out_T_376) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_666 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_667 = cat(in.isLeft, _out_T_666) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_668 = eq(_out_T_667, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_669 = and(_out_T_668, _out_T_414) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_670 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_671 = cat(in.isLeft, _out_T_670) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_672 = eq(_out_T_671, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_673 = and(_out_T_672, _out_T_376) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_674 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_675 = cat(in.isLeft, _out_T_674) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_676 = eq(_out_T_675, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_677 = and(_out_T_676, _out_T_338) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_678 = or(_out_T_665, _out_T_669) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_679 = or(_out_T_678, _out_T_673) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_680 = or(_out_T_679, _out_T_677) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_681 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_682 = cat(in.isLeft, _out_T_681) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_683 = eq(_out_T_682, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_684 = and(_out_T_683, _out_T_395) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_685 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_686 = cat(in.isLeft, _out_T_685) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_687 = eq(_out_T_686, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_688 = and(_out_T_687, _out_T_433) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_689 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_690 = cat(in.isLeft, _out_T_689) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_691 = eq(_out_T_690, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_692 = and(_out_T_691, _out_T_395) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_693 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_694 = cat(in.isLeft, _out_T_693) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_695 = eq(_out_T_694, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_696 = and(_out_T_695, _out_T_357) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_697 = or(_out_T_684, _out_T_688) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_698 = or(_out_T_697, _out_T_692) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_699 = or(_out_T_698, _out_T_696) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_700 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_701 = cat(in.isLeft, _out_T_700) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_702 = eq(_out_T_701, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_703 = and(_out_T_702, _out_T_414) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_704 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_705 = cat(in.isLeft, _out_T_704) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_706 = eq(_out_T_705, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_707 = and(_out_T_706, _out_T_452) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_708 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_709 = cat(in.isLeft, _out_T_708) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_710 = eq(_out_T_709, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_711 = and(_out_T_710, _out_T_414) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_712 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_713 = cat(in.isLeft, _out_T_712) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_714 = eq(_out_T_713, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_715 = and(_out_T_714, _out_T_376) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_716 = or(_out_T_703, _out_T_707) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_717 = or(_out_T_716, _out_T_711) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_718 = or(_out_T_717, _out_T_715) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_719 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_720 = cat(in.isLeft, _out_T_719) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_721 = eq(_out_T_720, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_722 = and(_out_T_721, _out_T_433) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_723 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_724 = cat(in.isLeft, _out_T_723) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_725 = eq(_out_T_724, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_726 = and(_out_T_725, _out_T_471) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_727 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_728 = cat(in.isLeft, _out_T_727) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_729 = eq(_out_T_728, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_730 = and(_out_T_729, _out_T_433) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_731 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_732 = cat(in.isLeft, _out_T_731) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_733 = eq(_out_T_732, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_734 = and(_out_T_733, _out_T_395) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_735 = or(_out_T_722, _out_T_726) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_736 = or(_out_T_735, _out_T_730) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_737 = or(_out_T_736, _out_T_734) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_738 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_739 = cat(in.isLeft, _out_T_738) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_740 = eq(_out_T_739, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_741 = and(_out_T_740, _out_T_452) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_742 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_743 = cat(in.isLeft, _out_T_742) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_744 = eq(_out_T_743, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_745 = and(_out_T_744, _out_T_490) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_746 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_747 = cat(in.isLeft, _out_T_746) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_748 = eq(_out_T_747, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_749 = and(_out_T_748, _out_T_452) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_750 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_751 = cat(in.isLeft, _out_T_750) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_752 = eq(_out_T_751, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_753 = and(_out_T_752, _out_T_414) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_754 = or(_out_T_741, _out_T_745) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_755 = or(_out_T_754, _out_T_749) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_756 = or(_out_T_755, _out_T_753) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_757 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_758 = cat(in.isLeft, _out_T_757) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_759 = eq(_out_T_758, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_760 = and(_out_T_759, _out_T_471) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_761 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_762 = cat(in.isLeft, _out_T_761) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_763 = eq(_out_T_762, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_764 = and(_out_T_763, _out_T_509) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_765 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_766 = cat(in.isLeft, _out_T_765) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_767 = eq(_out_T_766, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_768 = and(_out_T_767, _out_T_471) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_769 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_770 = cat(in.isLeft, _out_T_769) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_771 = eq(_out_T_770, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_772 = and(_out_T_771, _out_T_433) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_773 = or(_out_T_760, _out_T_764) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_774 = or(_out_T_773, _out_T_768) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_775 = or(_out_T_774, _out_T_772) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_776 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_777 = cat(in.isLeft, _out_T_776) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_778 = eq(_out_T_777, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_779 = and(_out_T_778, _out_T_490) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_780 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_781 = cat(in.isLeft, _out_T_780) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_782 = eq(_out_T_781, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_783 = and(_out_T_782, _out_T_528) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_784 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_785 = cat(in.isLeft, _out_T_784) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_786 = eq(_out_T_785, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_787 = and(_out_T_786, _out_T_490) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_788 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_789 = cat(in.isLeft, _out_T_788) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_790 = eq(_out_T_789, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_791 = and(_out_T_790, _out_T_452) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_792 = or(_out_T_779, _out_T_783) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_793 = or(_out_T_792, _out_T_787) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_794 = or(_out_T_793, _out_T_791) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_795 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_796 = cat(in.isLeft, _out_T_795) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_797 = eq(_out_T_796, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_798 = and(_out_T_797, _out_T_509) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_799 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_800 = cat(in.isLeft, _out_T_799) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_801 = eq(_out_T_800, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_802 = and(_out_T_801, _out_T_547) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_803 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_804 = cat(in.isLeft, _out_T_803) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_805 = eq(_out_T_804, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_806 = and(_out_T_805, _out_T_509) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_807 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_808 = cat(in.isLeft, _out_T_807) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_809 = eq(_out_T_808, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_810 = and(_out_T_809, _out_T_471) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_811 = or(_out_T_798, _out_T_802) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_812 = or(_out_T_811, _out_T_806) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_813 = or(_out_T_812, _out_T_810) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_814 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_815 = cat(in.isLeft, _out_T_814) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_816 = eq(_out_T_815, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_817 = and(_out_T_816, _out_T_528) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_818 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_819 = cat(in.isLeft, _out_T_818) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_820 = eq(_out_T_819, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_821 = and(_out_T_820, _out_T_566) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_822 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_823 = cat(in.isLeft, _out_T_822) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_824 = eq(_out_T_823, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_825 = and(_out_T_824, _out_T_528) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_826 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_827 = cat(in.isLeft, _out_T_826) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_828 = eq(_out_T_827, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_829 = and(_out_T_828, _out_T_490) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_830 = or(_out_T_817, _out_T_821) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_831 = or(_out_T_830, _out_T_825) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_832 = or(_out_T_831, _out_T_829) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_833 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_834 = cat(in.isLeft, _out_T_833) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_835 = eq(_out_T_834, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_836 = and(_out_T_835, _out_T_547) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_837 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_838 = cat(in.isLeft, _out_T_837) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_839 = eq(_out_T_838, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_840 = and(_out_T_839, _out_T_585) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_841 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_842 = cat(in.isLeft, _out_T_841) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_843 = eq(_out_T_842, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_844 = and(_out_T_843, _out_T_547) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_845 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_846 = cat(in.isLeft, _out_T_845) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_847 = eq(_out_T_846, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_848 = and(_out_T_847, _out_T_509) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_849 = or(_out_T_836, _out_T_840) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_850 = or(_out_T_849, _out_T_844) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_851 = or(_out_T_850, _out_T_848) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_852 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_853 = cat(in.isLeft, _out_T_852) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_854 = eq(_out_T_853, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_855 = and(_out_T_854, _out_T_566) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_856 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_857 = cat(in.isLeft, _out_T_856) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_858 = eq(_out_T_857, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_859 = and(_out_T_858, _out_T_604) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_860 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_861 = cat(in.isLeft, _out_T_860) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_862 = eq(_out_T_861, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_863 = and(_out_T_862, _out_T_566) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_864 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_865 = cat(in.isLeft, _out_T_864) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_866 = eq(_out_T_865, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_867 = and(_out_T_866, _out_T_528) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_868 = or(_out_T_855, _out_T_859) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_869 = or(_out_T_868, _out_T_863) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_870 = or(_out_T_869, _out_T_867) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_871 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_872 = cat(in.isLeft, _out_T_871) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_873 = eq(_out_T_872, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_874 = and(_out_T_873, _out_T_585) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_875 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_876 = cat(in.isLeft, _out_T_875) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_877 = eq(_out_T_876, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_878 = and(_out_T_877, _out_T_623) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_879 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_880 = cat(in.isLeft, _out_T_879) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_881 = eq(_out_T_880, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_882 = and(_out_T_881, _out_T_585) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_883 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_884 = cat(in.isLeft, _out_T_883) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_885 = eq(_out_T_884, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_886 = and(_out_T_885, _out_T_547) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_887 = or(_out_T_874, _out_T_878) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_888 = or(_out_T_887, _out_T_882) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_889 = or(_out_T_888, _out_T_886) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_890 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_891 = cat(in.isLeft, _out_T_890) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_892 = eq(_out_T_891, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_893 = and(_out_T_892, _out_T_604) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_894 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_895 = cat(in.isLeft, _out_T_894) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_896 = eq(_out_T_895, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_897 = and(_out_T_896, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_898 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_899 = cat(in.isLeft, _out_T_898) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_900 = eq(_out_T_899, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_901 = and(_out_T_900, _out_T_604) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_902 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_903 = cat(in.isLeft, _out_T_902) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_904 = eq(_out_T_903, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_905 = and(_out_T_904, _out_T_566) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_906 = or(_out_T_893, _out_T_897) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_907 = or(_out_T_906, _out_T_901) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_908 = or(_out_T_907, _out_T_905) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_909 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_910 = cat(in.isLeft, _out_T_909) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_911 = eq(_out_T_910, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_912 = and(_out_T_911, _out_T_623) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_913 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_914 = cat(in.isLeft, _out_T_913) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_915 = eq(_out_T_914, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_916 = and(_out_T_915, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_917 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_918 = cat(in.isLeft, _out_T_917) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_919 = eq(_out_T_918, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_920 = and(_out_T_919, _out_T_623) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_921 = bits(in.shamt, 1, 1) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_922 = cat(in.isLeft, _out_T_921) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_923 = eq(_out_T_922, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_924 = and(_out_T_923, _out_T_585) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_925 = or(_out_T_912, _out_T_916) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_926 = or(_out_T_925, _out_T_920) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_927 = or(_out_T_926, _out_T_924) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_928 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_929 = cat(in.isLeft, _out_T_928) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_930 = eq(_out_T_929, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_931 = and(_out_T_930, _out_T_642) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_932 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_933 = cat(in.isLeft, _out_T_932) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_934 = eq(_out_T_933, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_935 = and(_out_T_934, _out_T_661) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_936 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_937 = cat(in.isLeft, _out_T_936) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_938 = eq(_out_T_937, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_939 = and(_out_T_938, _out_T_642) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_940 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_941 = cat(in.isLeft, _out_T_940) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_942 = eq(_out_T_941, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_943 = and(_out_T_942, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_944 = or(_out_T_931, _out_T_935) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_945 = or(_out_T_944, _out_T_939) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_946 = or(_out_T_945, _out_T_943) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_947 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_948 = cat(in.isLeft, _out_T_947) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_949 = eq(_out_T_948, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_950 = and(_out_T_949, _out_T_661) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_951 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_952 = cat(in.isLeft, _out_T_951) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_953 = eq(_out_T_952, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_954 = and(_out_T_953, _out_T_680) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_955 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_956 = cat(in.isLeft, _out_T_955) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_957 = eq(_out_T_956, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_958 = and(_out_T_957, _out_T_661) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_959 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_960 = cat(in.isLeft, _out_T_959) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_961 = eq(_out_T_960, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_962 = and(_out_T_961, _out_T_642) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_963 = or(_out_T_950, _out_T_954) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_964 = or(_out_T_963, _out_T_958) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_965 = or(_out_T_964, _out_T_962) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_966 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_967 = cat(in.isLeft, _out_T_966) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_968 = eq(_out_T_967, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_969 = and(_out_T_968, _out_T_680) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_970 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_971 = cat(in.isLeft, _out_T_970) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_972 = eq(_out_T_971, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_973 = and(_out_T_972, _out_T_699) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_974 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_975 = cat(in.isLeft, _out_T_974) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_976 = eq(_out_T_975, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_977 = and(_out_T_976, _out_T_680) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_978 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_979 = cat(in.isLeft, _out_T_978) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_980 = eq(_out_T_979, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_981 = and(_out_T_980, _out_T_661) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_982 = or(_out_T_969, _out_T_973) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_983 = or(_out_T_982, _out_T_977) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_984 = or(_out_T_983, _out_T_981) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_985 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_986 = cat(in.isLeft, _out_T_985) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_987 = eq(_out_T_986, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_988 = and(_out_T_987, _out_T_699) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_989 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_990 = cat(in.isLeft, _out_T_989) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_991 = eq(_out_T_990, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_992 = and(_out_T_991, _out_T_718) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_993 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_994 = cat(in.isLeft, _out_T_993) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_995 = eq(_out_T_994, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_996 = and(_out_T_995, _out_T_699) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_997 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_998 = cat(in.isLeft, _out_T_997) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_999 = eq(_out_T_998, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1000 = and(_out_T_999, _out_T_680) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1001 = or(_out_T_988, _out_T_992) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1002 = or(_out_T_1001, _out_T_996) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1003 = or(_out_T_1002, _out_T_1000) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1004 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1005 = cat(in.isLeft, _out_T_1004) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1006 = eq(_out_T_1005, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1007 = and(_out_T_1006, _out_T_718) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1008 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1009 = cat(in.isLeft, _out_T_1008) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1010 = eq(_out_T_1009, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1011 = and(_out_T_1010, _out_T_737) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1012 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1013 = cat(in.isLeft, _out_T_1012) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1014 = eq(_out_T_1013, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1015 = and(_out_T_1014, _out_T_718) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1016 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1017 = cat(in.isLeft, _out_T_1016) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1018 = eq(_out_T_1017, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1019 = and(_out_T_1018, _out_T_699) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1020 = or(_out_T_1007, _out_T_1011) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1021 = or(_out_T_1020, _out_T_1015) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1022 = or(_out_T_1021, _out_T_1019) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1023 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1024 = cat(in.isLeft, _out_T_1023) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1025 = eq(_out_T_1024, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1026 = and(_out_T_1025, _out_T_737) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1027 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1028 = cat(in.isLeft, _out_T_1027) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1029 = eq(_out_T_1028, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1030 = and(_out_T_1029, _out_T_756) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1031 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1032 = cat(in.isLeft, _out_T_1031) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1033 = eq(_out_T_1032, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1034 = and(_out_T_1033, _out_T_737) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1035 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1036 = cat(in.isLeft, _out_T_1035) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1037 = eq(_out_T_1036, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1038 = and(_out_T_1037, _out_T_718) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1039 = or(_out_T_1026, _out_T_1030) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1040 = or(_out_T_1039, _out_T_1034) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1041 = or(_out_T_1040, _out_T_1038) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1042 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1043 = cat(in.isLeft, _out_T_1042) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1044 = eq(_out_T_1043, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1045 = and(_out_T_1044, _out_T_756) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1046 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1047 = cat(in.isLeft, _out_T_1046) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1048 = eq(_out_T_1047, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1049 = and(_out_T_1048, _out_T_775) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1050 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1051 = cat(in.isLeft, _out_T_1050) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1052 = eq(_out_T_1051, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1053 = and(_out_T_1052, _out_T_756) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1054 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1055 = cat(in.isLeft, _out_T_1054) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1056 = eq(_out_T_1055, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1057 = and(_out_T_1056, _out_T_737) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1058 = or(_out_T_1045, _out_T_1049) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1059 = or(_out_T_1058, _out_T_1053) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1060 = or(_out_T_1059, _out_T_1057) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1061 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1062 = cat(in.isLeft, _out_T_1061) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1063 = eq(_out_T_1062, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1064 = and(_out_T_1063, _out_T_775) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1065 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1066 = cat(in.isLeft, _out_T_1065) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1067 = eq(_out_T_1066, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1068 = and(_out_T_1067, _out_T_794) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1069 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1070 = cat(in.isLeft, _out_T_1069) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1071 = eq(_out_T_1070, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1072 = and(_out_T_1071, _out_T_775) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1073 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1074 = cat(in.isLeft, _out_T_1073) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1075 = eq(_out_T_1074, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1076 = and(_out_T_1075, _out_T_756) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1077 = or(_out_T_1064, _out_T_1068) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1078 = or(_out_T_1077, _out_T_1072) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1079 = or(_out_T_1078, _out_T_1076) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1080 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1081 = cat(in.isLeft, _out_T_1080) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1082 = eq(_out_T_1081, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1083 = and(_out_T_1082, _out_T_794) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1084 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1085 = cat(in.isLeft, _out_T_1084) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1086 = eq(_out_T_1085, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1087 = and(_out_T_1086, _out_T_813) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1088 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1089 = cat(in.isLeft, _out_T_1088) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1090 = eq(_out_T_1089, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1091 = and(_out_T_1090, _out_T_794) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1092 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1093 = cat(in.isLeft, _out_T_1092) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1094 = eq(_out_T_1093, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1095 = and(_out_T_1094, _out_T_775) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1096 = or(_out_T_1083, _out_T_1087) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1097 = or(_out_T_1096, _out_T_1091) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1098 = or(_out_T_1097, _out_T_1095) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1099 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1100 = cat(in.isLeft, _out_T_1099) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1101 = eq(_out_T_1100, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1102 = and(_out_T_1101, _out_T_813) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1103 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1104 = cat(in.isLeft, _out_T_1103) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1105 = eq(_out_T_1104, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1106 = and(_out_T_1105, _out_T_832) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1107 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1108 = cat(in.isLeft, _out_T_1107) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1109 = eq(_out_T_1108, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1110 = and(_out_T_1109, _out_T_813) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1111 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1112 = cat(in.isLeft, _out_T_1111) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1113 = eq(_out_T_1112, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1114 = and(_out_T_1113, _out_T_794) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1115 = or(_out_T_1102, _out_T_1106) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1116 = or(_out_T_1115, _out_T_1110) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1117 = or(_out_T_1116, _out_T_1114) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1118 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1119 = cat(in.isLeft, _out_T_1118) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1120 = eq(_out_T_1119, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1121 = and(_out_T_1120, _out_T_832) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1122 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1123 = cat(in.isLeft, _out_T_1122) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1124 = eq(_out_T_1123, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1125 = and(_out_T_1124, _out_T_851) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1126 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1127 = cat(in.isLeft, _out_T_1126) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1128 = eq(_out_T_1127, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1129 = and(_out_T_1128, _out_T_832) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1130 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1131 = cat(in.isLeft, _out_T_1130) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1132 = eq(_out_T_1131, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1133 = and(_out_T_1132, _out_T_813) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1134 = or(_out_T_1121, _out_T_1125) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1135 = or(_out_T_1134, _out_T_1129) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1136 = or(_out_T_1135, _out_T_1133) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1137 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1138 = cat(in.isLeft, _out_T_1137) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1139 = eq(_out_T_1138, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1140 = and(_out_T_1139, _out_T_851) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1141 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1142 = cat(in.isLeft, _out_T_1141) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1143 = eq(_out_T_1142, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1144 = and(_out_T_1143, _out_T_870) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1145 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1146 = cat(in.isLeft, _out_T_1145) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1147 = eq(_out_T_1146, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1148 = and(_out_T_1147, _out_T_851) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1149 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1150 = cat(in.isLeft, _out_T_1149) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1151 = eq(_out_T_1150, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1152 = and(_out_T_1151, _out_T_832) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1153 = or(_out_T_1140, _out_T_1144) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1154 = or(_out_T_1153, _out_T_1148) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1155 = or(_out_T_1154, _out_T_1152) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1156 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1157 = cat(in.isLeft, _out_T_1156) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1158 = eq(_out_T_1157, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1159 = and(_out_T_1158, _out_T_870) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1160 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1161 = cat(in.isLeft, _out_T_1160) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1162 = eq(_out_T_1161, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1163 = and(_out_T_1162, _out_T_889) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1164 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1165 = cat(in.isLeft, _out_T_1164) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1166 = eq(_out_T_1165, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1167 = and(_out_T_1166, _out_T_870) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1168 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1169 = cat(in.isLeft, _out_T_1168) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1170 = eq(_out_T_1169, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1171 = and(_out_T_1170, _out_T_851) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1172 = or(_out_T_1159, _out_T_1163) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1173 = or(_out_T_1172, _out_T_1167) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1174 = or(_out_T_1173, _out_T_1171) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1175 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1176 = cat(in.isLeft, _out_T_1175) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1177 = eq(_out_T_1176, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1178 = and(_out_T_1177, _out_T_889) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1179 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1180 = cat(in.isLeft, _out_T_1179) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1181 = eq(_out_T_1180, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1182 = and(_out_T_1181, _out_T_908) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1183 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1184 = cat(in.isLeft, _out_T_1183) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1185 = eq(_out_T_1184, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1186 = and(_out_T_1185, _out_T_889) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1187 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1188 = cat(in.isLeft, _out_T_1187) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1189 = eq(_out_T_1188, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1190 = and(_out_T_1189, _out_T_870) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1191 = or(_out_T_1178, _out_T_1182) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1192 = or(_out_T_1191, _out_T_1186) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1193 = or(_out_T_1192, _out_T_1190) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1194 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1195 = cat(in.isLeft, _out_T_1194) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1196 = eq(_out_T_1195, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1197 = and(_out_T_1196, _out_T_908) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1198 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1199 = cat(in.isLeft, _out_T_1198) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1200 = eq(_out_T_1199, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1201 = and(_out_T_1200, _out_T_927) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1202 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1203 = cat(in.isLeft, _out_T_1202) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1204 = eq(_out_T_1203, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1205 = and(_out_T_1204, _out_T_908) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1206 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1207 = cat(in.isLeft, _out_T_1206) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1208 = eq(_out_T_1207, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1209 = and(_out_T_1208, _out_T_889) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1210 = or(_out_T_1197, _out_T_1201) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1211 = or(_out_T_1210, _out_T_1205) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1212 = or(_out_T_1211, _out_T_1209) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1213 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1214 = cat(in.isLeft, _out_T_1213) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1215 = eq(_out_T_1214, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1216 = and(_out_T_1215, _out_T_927) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1217 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1218 = cat(in.isLeft, _out_T_1217) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1219 = eq(_out_T_1218, UInt<1>("h1")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1220 = and(_out_T_1219, leftIn) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1221 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1222 = cat(in.isLeft, _out_T_1221) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1223 = eq(_out_T_1222, UInt<2>("h2")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1224 = and(_out_T_1223, _out_T_927) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1225 = bits(in.shamt, 0, 0) @[playground/src/exp6/BarrelShift.scala 24:40]
    node _out_T_1226 = cat(in.isLeft, _out_T_1225) @[playground/src/exp6/BarrelShift.scala 24:20]
    node _out_T_1227 = eq(_out_T_1226, UInt<2>("h3")) @[playground/src/exp6/BarrelShift.scala 24:45]
    node _out_T_1228 = and(_out_T_1227, _out_T_908) @[playground/src/exp6/BarrelShift.scala 24:57]
    node _out_T_1229 = or(_out_T_1216, _out_T_1220) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1230 = or(_out_T_1229, _out_T_1224) @[playground/src/exp6/BarrelShift.scala 24:73]
    node _out_T_1231 = or(_out_T_1230, _out_T_1228) @[playground/src/exp6/BarrelShift.scala 24:73]
    wire _out_WIRE : UInt<1>[16] @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[0] <= _out_T_946 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[1] <= _out_T_965 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[2] <= _out_T_984 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[3] <= _out_T_1003 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[4] <= _out_T_1022 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[5] <= _out_T_1041 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[6] <= _out_T_1060 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[7] <= _out_T_1079 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[8] <= _out_T_1098 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[9] <= _out_T_1117 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[10] <= _out_T_1136 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[11] <= _out_T_1155 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[12] <= _out_T_1174 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[13] <= _out_T_1193 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[14] <= _out_T_1212 @[playground/src/exp6/BarrelShift.scala 28:17]
    _out_WIRE[15] <= _out_T_1231 @[playground/src/exp6/BarrelShift.scala 28:17]
    node out_lo_lo_lo = cat(_out_WIRE[1], _out_WIRE[0]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_lo_lo_hi = cat(_out_WIRE[3], _out_WIRE[2]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_lo_lo = cat(out_lo_lo_hi, out_lo_lo_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_lo_hi_lo = cat(_out_WIRE[5], _out_WIRE[4]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_lo_hi_hi = cat(_out_WIRE[7], _out_WIRE[6]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_lo_hi = cat(out_lo_hi_hi, out_lo_hi_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_lo = cat(out_lo_hi, out_lo_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi_lo_lo = cat(_out_WIRE[9], _out_WIRE[8]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi_lo_hi = cat(_out_WIRE[11], _out_WIRE[10]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi_lo = cat(out_hi_lo_hi, out_hi_lo_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi_hi_lo = cat(_out_WIRE[13], _out_WIRE[12]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi_hi_hi = cat(_out_WIRE[15], _out_WIRE[14]) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi_hi = cat(out_hi_hi_hi, out_hi_hi_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    node out_hi = cat(out_hi_hi, out_hi_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    node _out_T_1232 = cat(out_hi, out_lo) @[playground/src/exp6/BarrelShift.scala 28:67]
    out <= _out_T_1232 @[playground/src/exp6/BarrelShift.scala 28:7]
    node _ref_out_T = dshl(in.in, in.shamt) @[playground/src/exp6/BarrelShift.scala 30:39]
    node _ref_out_T_1 = bits(_ref_out_T, 15, 0) @[playground/src/exp6/BarrelShift.scala 30:51]
    node _ref_out_T_2 = asSInt(in.in) @[playground/src/exp6/BarrelShift.scala 31:28]
    node _ref_out_T_3 = dshr(_ref_out_T_2, in.shamt) @[playground/src/exp6/BarrelShift.scala 31:35]
    node _ref_out_T_4 = asUInt(_ref_out_T_3) @[playground/src/exp6/BarrelShift.scala 31:48]
    node _ref_out_T_5 = dshr(in.in, in.shamt) @[playground/src/exp6/BarrelShift.scala 31:62]
    node _ref_out_T_6 = mux(in.isArith, _ref_out_T_4, _ref_out_T_5) @[playground/src/exp6/BarrelShift.scala 31:8]
    node ref_out = mux(in.isLeft, _ref_out_T_1, _ref_out_T_6) @[playground/src/exp6/BarrelShift.scala 30:20]
    node _T = eq(out, ref_out) @[playground/src/exp6/BarrelShift.scala 32:14]
    node _T_1 = asUInt(reset) @[playground/src/exp6/BarrelShift.scala 32:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 32:9]
    when _T_2 : @[playground/src/exp6/BarrelShift.scala 32:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/BarrelShift.scala 32:9]
      when _T_3 : @[playground/src/exp6/BarrelShift.scala 32:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at BarrelShift.scala:32 assert(out === ref_out)\n") : printf @[playground/src/exp6/BarrelShift.scala 32:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/BarrelShift.scala 32:9]


  module BarrelShiftTest_3 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of BarrelShift_3 @[playground/src/exp6/BarrelShift.scala 36:17]
    m.clock <= clock
    m.reset <= reset
    reg cnt : UInt<22>, clock with :
      reset => (reset, UInt<22>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire finish_1 : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    finish_1 <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _wrap_wrap_T = mux(UInt<1>("h1"), UInt<22>("h3fffff"), UInt<22>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node wrap_wrap = eq(cnt, _wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _wrap_value_T = add(cnt, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cnt <= _wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      finish_1 <= wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    wire _m_in_WIRE : { flip in : UInt<16>, flip shamt : UInt<4>, flip isLeft : UInt<1>, flip isArith : UInt<1>} @[playground/src/utils/Utils.scala 33:27]
    wire _m_in_WIRE_1 : UInt<22> @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE_1 <= cnt @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T = bits(_m_in_WIRE_1, 0, 0) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.isArith <= _m_in_T @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_1 = bits(_m_in_WIRE_1, 1, 1) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.isLeft <= _m_in_T_1 @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_2 = bits(_m_in_WIRE_1, 5, 2) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.shamt <= _m_in_T_2 @[playground/src/utils/Utils.scala 33:27]
    node _m_in_T_3 = bits(_m_in_WIRE_1, 21, 6) @[playground/src/utils/Utils.scala 33:27]
    _m_in_WIRE.in <= _m_in_T_3 @[playground/src/utils/Utils.scala 33:27]
    m.in.isArith <= _m_in_WIRE.isArith @[playground/src/utils/Utils.scala 33:12]
    m.in.isLeft <= _m_in_WIRE.isLeft @[playground/src/utils/Utils.scala 33:12]
    m.in.shamt <= _m_in_WIRE.shamt @[playground/src/utils/Utils.scala 33:12]
    m.in.in <= _m_in_WIRE.in @[playground/src/utils/Utils.scala 33:12]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_1 = and(start, _T) @[playground/src/utils/Utils.scala 48:17]
    when _T_1 : @[playground/src/utils/Utils.scala 48:37]
      node _T_2 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_3 = eq(_T_2, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_3 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for BarrelShift-16bit, may finish after 4194304 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_4 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_5 = and(_T_4, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_5 : @[playground/src/utils/Utils.scala 52:32]
      node _T_6 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_7 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_8 = eq(_T_7, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_8 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: BarrelShift-16bit\n", _T_6) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[2]}, flip increment : UInt<1>, out : UInt<1>[2]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[2] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[2], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[1], state[0]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<2> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h1")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<1>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<2> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = xor(_out_next_T_4, _out_next_T_5) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_8 = cat(_out_next_T_2, _out_next_T_7) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_8 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out = cat(ref_out_prng.io.out[1], ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<2>("h3")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<2>("h3")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[4] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-2bit, may finish after 4 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-2bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_1 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[3]}, flip increment : UInt<1>, out : UInt<1>[3]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[3] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[3], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[2], state[1]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_1 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<3> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<2>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<3> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<3>, clock with :
      reset => (reset, UInt<3>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 1, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = xor(_out_next_T_5, _out_next_T_7) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_10 = cat(_out_next_T_2, _out_next_T_9) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_10 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_1 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_hi = cat(ref_out_prng.io.out[2], ref_out_prng.io.out[1]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_1 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_1 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<3>("h7")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<3>("h7")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[8] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-3bit, may finish after 8 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-3bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_2 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[4]}, flip increment : UInt<1>, out : UInt<1>[4]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[4] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[4], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[3], state[2]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_2 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<4> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<3>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<4> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<4>, clock with :
      reset => (reset, UInt<4>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 2, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = xor(_out_next_T_6, _out_next_T_9) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_12 = cat(_out_next_T_2, _out_next_T_11) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_12 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_2 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo = cat(ref_out_prng.io.out[1], ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_prng.io.out[3], ref_out_prng.io.out[2]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_2 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_2 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<4>("hf")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<4>("hf")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[16] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-4bit, may finish after 16 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-4bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_3 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[5]}, flip increment : UInt<1>, out : UInt<1>[5]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[5] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[5], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[4], state[2]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_3 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<5> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<4>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<5> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<5>, clock with :
      reset => (reset, UInt<5>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 3, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = xor(_out_next_T_7, _out_next_T_10) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_14 = cat(_out_next_T_2, _out_next_T_13) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_14 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_3 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo = cat(ref_out_prng.io.out[1], ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_prng.io.out[4], ref_out_prng.io.out[3]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_prng.io.out[2]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_3 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_3 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<5>("h1f")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<5>("h1f")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[32] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-5bit, may finish after 32 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-5bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_4 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[6]}, flip increment : UInt<1>, out : UInt<1>[6]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[6] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[6], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[5], state[4]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_4 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<6> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<5>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<6> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<6>, clock with :
      reset => (reset, UInt<6>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 4, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = xor(_out_next_T_8, _out_next_T_13) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_16 = cat(_out_next_T_2, _out_next_T_15) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_16 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_4 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_hi = cat(ref_out_prng.io.out[2], ref_out_prng.io.out[1]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_prng.io.out[5], ref_out_prng.io.out[4]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_prng.io.out[3]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_4 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_4 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<6>("h3f")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<6>("h3f")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[64] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-6bit, may finish after 64 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-6bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_5 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[7]}, flip increment : UInt<1>, out : UInt<1>[7]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[7] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[7], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[6], state[5]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_5 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<7> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<6>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<7> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<7>, clock with :
      reset => (reset, UInt<7>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 5, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = xor(_out_next_T_9, _out_next_T_15) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_18 = cat(_out_next_T_2, _out_next_T_17) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_18 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_5 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_hi = cat(ref_out_prng.io.out[2], ref_out_prng.io.out[1]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_prng.io.out[4], ref_out_prng.io.out[3]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_prng.io.out[6], ref_out_prng.io.out[5]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_5 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_5 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<7>, clock with :
      reset => (reset, UInt<7>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<7>("h7f")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<7>, clock with :
      reset => (reset, UInt<7>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<7>("h7f")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[128] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-7bit, may finish after 128 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-7bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_6 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[8]}, flip increment : UInt<1>, out : UInt<1>[8]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[8] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[7] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[8], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[7], state[5]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_1 = xor(_T, state[4]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_2 = xor(_T_1, state[3]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T_2 @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[7] <= state[6] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[7] <= io.seed.bits[7] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_6 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<8> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = xor(_out_next_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_2 = xor(_out_next_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_3 = cat(UInt<7>("h1"), _out_next_T_2) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<8> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<8>, clock with :
      reset => (reset, UInt<8>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_4 = bits(out_r, 6, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_5 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_18 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_19 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_20 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_21 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_22 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_23 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_24 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_25 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_26 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_27 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_28 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_29 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_30 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_31 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_32 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_33 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_34 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_35 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_36 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_37 = xor(_out_next_T_12, _out_next_T_18) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_38 = xor(_out_next_T_37, _out_next_T_25) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_39 = xor(_out_next_T_38, _out_next_T_32) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_40 = cat(_out_next_T_4, _out_next_T_39) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_40 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_6 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[7] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_lo = cat(ref_out_prng.io.out[1], ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi = cat(ref_out_prng.io.out[3], ref_out_prng.io.out[2]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_prng.io.out[5], ref_out_prng.io.out[4]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_prng.io.out[7], ref_out_prng.io.out[6]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_6 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_6 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<8>("hff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<8>("hff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[256] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-8bit, may finish after 256 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-8bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_7 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[9]}, flip increment : UInt<1>, out : UInt<1>[9]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[9] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[7] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[8] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[9], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[8], state[4]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[7] <= state[6] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[8] <= state[7] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[7] <= io.seed.bits[7] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[8] <= io.seed.bits[8] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_7 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<9> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<8>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<9> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<9>, clock with :
      reset => (reset, UInt<9>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 7, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_18 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_19 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_20 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_21 = xor(_out_next_T_11, _out_next_T_16) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_22 = cat(_out_next_T_2, _out_next_T_21) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_22 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_7 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[7] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[8] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_lo = cat(ref_out_prng.io.out[1], ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi = cat(ref_out_prng.io.out[3], ref_out_prng.io.out[2]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_prng.io.out[5], ref_out_prng.io.out[4]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_hi = cat(ref_out_prng.io.out[8], ref_out_prng.io.out[7]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_hi_hi_hi, ref_out_prng.io.out[6]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_7 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_7 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<9>("h1ff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<9>("h1ff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[512] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-9bit, may finish after 512 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-9bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_8 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[10]}, flip increment : UInt<1>, out : UInt<1>[10]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[10] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[7] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[8] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[9] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[10], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[9], state[6]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[7] <= state[6] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[8] <= state[7] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[9] <= state[8] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[7] <= io.seed.bits[7] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[8] <= io.seed.bits[8] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[9] <= io.seed.bits[9] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_8 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<10> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<9>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<10> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<10>, clock with :
      reset => (reset, UInt<10>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 8, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_18 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_19 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_20 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_21 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_22 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_23 = xor(_out_next_T_12, _out_next_T_19) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_24 = cat(_out_next_T_2, _out_next_T_23) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_24 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_8 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[7] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[8] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[9] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_lo = cat(ref_out_prng.io.out[1], ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_hi = cat(ref_out_prng.io.out[4], ref_out_prng.io.out[3]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi = cat(ref_out_lo_hi_hi, ref_out_prng.io.out[2]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_prng.io.out[6], ref_out_prng.io.out[5]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_hi = cat(ref_out_prng.io.out[9], ref_out_prng.io.out[8]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_hi_hi_hi, ref_out_prng.io.out[7]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_8 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_8 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<10>, clock with :
      reset => (reset, UInt<10>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<10>("h3ff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<10>, clock with :
      reset => (reset, UInt<10>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<10>("h3ff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[1024] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-10bit, may finish after 1024 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-10bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_9 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[11]}, flip increment : UInt<1>, out : UInt<1>[11]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[11] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[7] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[8] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[9] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[10] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[11], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[10], state[8]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[7] <= state[6] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[8] <= state[7] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[9] <= state[8] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[10] <= state[9] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[7] <= io.seed.bits[7] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[8] <= io.seed.bits[8] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[9] <= io.seed.bits[9] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[10] <= io.seed.bits[10] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_9 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<11> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<10>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<11> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<11>, clock with :
      reset => (reset, UInt<11>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 9, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_18 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_19 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_20 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_21 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_22 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_23 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_24 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_25 = xor(_out_next_T_13, _out_next_T_22) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_26 = cat(_out_next_T_2, _out_next_T_25) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_26 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_9 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[7] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[8] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[9] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[10] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_lo = cat(ref_out_prng.io.out[1], ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_hi = cat(ref_out_prng.io.out[4], ref_out_prng.io.out[3]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi = cat(ref_out_lo_hi_hi, ref_out_prng.io.out[2]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo_hi = cat(ref_out_prng.io.out[7], ref_out_prng.io.out[6]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_hi_lo_hi, ref_out_prng.io.out[5]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_hi = cat(ref_out_prng.io.out[10], ref_out_prng.io.out[9]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_hi_hi_hi, ref_out_prng.io.out[8]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_9 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_9 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<11>, clock with :
      reset => (reset, UInt<11>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<11>("h7ff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<11>, clock with :
      reset => (reset, UInt<11>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<11>("h7ff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[2048] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-11bit, may finish after 2048 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-11bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_10 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[12]}, flip increment : UInt<1>, out : UInt<1>[12]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[12] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[7] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[8] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[9] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[10] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[11] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[12], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[11], state[10]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_1 = xor(_T, state[7]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_2 = xor(_T_1, state[5]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T_2 @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[7] <= state[6] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[8] <= state[7] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[9] <= state[8] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[10] <= state[9] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[11] <= state[10] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[7] <= io.seed.bits[7] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[8] <= io.seed.bits[8] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[9] <= io.seed.bits[9] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[10] <= io.seed.bits[10] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[11] <= io.seed.bits[11] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_10 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<12> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = xor(_out_next_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_2 = xor(_out_next_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_3 = cat(UInt<11>("h1"), _out_next_T_2) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<12> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<12>, clock with :
      reset => (reset, UInt<12>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_4 = bits(out_r, 10, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_5 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_18 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_19 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_20 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_21 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_22 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_23 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_24 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_25 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_26 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_27 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_28 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_29 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_30 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_31 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_32 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_33 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_34 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_35 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_36 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_37 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_38 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_39 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_40 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_41 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_42 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_43 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_44 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_45 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_46 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_47 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_48 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_49 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_50 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_51 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_52 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_53 = xor(_out_next_T_16, _out_next_T_27) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_54 = xor(_out_next_T_53, _out_next_T_36) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_55 = xor(_out_next_T_54, _out_next_T_46) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_56 = cat(_out_next_T_4, _out_next_T_55) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_56 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_10 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[7] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[8] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[9] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[10] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[11] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_lo_hi = cat(ref_out_prng.io.out[2], ref_out_prng.io.out[1]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_lo = cat(ref_out_lo_lo_hi, ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_hi = cat(ref_out_prng.io.out[5], ref_out_prng.io.out[4]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi = cat(ref_out_lo_hi_hi, ref_out_prng.io.out[3]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo_hi = cat(ref_out_prng.io.out[8], ref_out_prng.io.out[7]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_hi_lo_hi, ref_out_prng.io.out[6]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_hi = cat(ref_out_prng.io.out[11], ref_out_prng.io.out[10]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_hi_hi_hi, ref_out_prng.io.out[9]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_10 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_10 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<12>, clock with :
      reset => (reset, UInt<12>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<12>("hfff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<12>, clock with :
      reset => (reset, UInt<12>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<12>("hfff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[4096] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-12bit, may finish after 4096 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-12bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_11 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[13]}, flip increment : UInt<1>, out : UInt<1>[13]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[13] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[7] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[8] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[9] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[10] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[11] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[12] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[13], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[12], state[11]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_1 = xor(_T, state[9]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_2 = xor(_T_1, state[8]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T_2 @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[7] <= state[6] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[8] <= state[7] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[9] <= state[8] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[10] <= state[9] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[11] <= state[10] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[12] <= state[11] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[7] <= io.seed.bits[7] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[8] <= io.seed.bits[8] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[9] <= io.seed.bits[9] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[10] <= io.seed.bits[10] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[11] <= io.seed.bits[11] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[12] <= io.seed.bits[12] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_11 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<13> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = xor(_out_next_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_2 = xor(_out_next_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_3 = cat(UInt<12>("h1"), _out_next_T_2) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<13> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<13>, clock with :
      reset => (reset, UInt<13>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_4 = bits(out_r, 11, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_5 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_18 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_19 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_20 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_21 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_22 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_23 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_24 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_25 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_26 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_27 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_28 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_29 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_30 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_31 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_32 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_33 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_34 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_35 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_36 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_37 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_38 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_39 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_40 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_41 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_42 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_43 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_44 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_45 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_46 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_47 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_48 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_49 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_50 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_51 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_52 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_53 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_54 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_55 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_56 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_57 = xor(_out_next_T_17, _out_next_T_29) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_58 = xor(_out_next_T_57, _out_next_T_40) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_59 = xor(_out_next_T_58, _out_next_T_52) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_60 = cat(_out_next_T_4, _out_next_T_59) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_60 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_11 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[7] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[8] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[9] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[10] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[11] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[12] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_lo_hi = cat(ref_out_prng.io.out[2], ref_out_prng.io.out[1]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_lo = cat(ref_out_lo_lo_hi, ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_hi = cat(ref_out_prng.io.out[5], ref_out_prng.io.out[4]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi = cat(ref_out_lo_hi_hi, ref_out_prng.io.out[3]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo_hi = cat(ref_out_prng.io.out[8], ref_out_prng.io.out[7]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_hi_lo_hi, ref_out_prng.io.out[6]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_lo = cat(ref_out_prng.io.out[10], ref_out_prng.io.out[9]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_hi = cat(ref_out_prng.io.out[12], ref_out_prng.io.out[11]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_hi_hi_hi, ref_out_hi_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_11 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_11 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<13>, clock with :
      reset => (reset, UInt<13>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<13>("h1fff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<13>, clock with :
      reset => (reset, UInt<13>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<13>("h1fff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[8192] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-13bit, may finish after 8192 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-13bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_12 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[14]}, flip increment : UInt<1>, out : UInt<1>[14]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[14] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[7] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[8] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[9] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[10] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[11] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[12] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[13] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[14], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[13], state[12]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_1 = xor(_T, state[10]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_2 = xor(_T_1, state[8]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T_2 @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[7] <= state[6] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[8] <= state[7] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[9] <= state[8] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[10] <= state[9] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[11] <= state[10] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[12] <= state[11] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[13] <= state[12] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[7] <= io.seed.bits[7] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[8] <= io.seed.bits[8] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[9] <= io.seed.bits[9] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[10] <= io.seed.bits[10] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[11] <= io.seed.bits[11] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[12] <= io.seed.bits[12] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[13] <= io.seed.bits[13] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_12 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<14> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = xor(_out_next_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_2 = xor(_out_next_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_3 = cat(UInt<13>("h1"), _out_next_T_2) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<14> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<14>, clock with :
      reset => (reset, UInt<14>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_4 = bits(out_r, 12, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_5 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_18 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_19 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_20 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_21 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_22 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_23 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_24 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_25 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_26 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_27 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_28 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_29 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_30 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_31 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_32 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_33 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_34 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_35 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_36 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_37 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_38 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_39 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_40 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_41 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_42 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_43 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_44 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_45 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_46 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_47 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_48 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_49 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_50 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_51 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_52 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_53 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_54 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_55 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_56 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_57 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_58 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_59 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_60 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_61 = xor(_out_next_T_18, _out_next_T_31) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_62 = xor(_out_next_T_61, _out_next_T_43) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_63 = xor(_out_next_T_62, _out_next_T_55) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_64 = cat(_out_next_T_4, _out_next_T_63) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_64 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_12 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[7] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[8] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[9] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[10] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[11] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[12] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[13] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_lo_hi = cat(ref_out_prng.io.out[2], ref_out_prng.io.out[1]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_lo = cat(ref_out_lo_lo_hi, ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_lo = cat(ref_out_prng.io.out[4], ref_out_prng.io.out[3]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_hi = cat(ref_out_prng.io.out[6], ref_out_prng.io.out[5]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi = cat(ref_out_lo_hi_hi, ref_out_lo_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo_hi = cat(ref_out_prng.io.out[9], ref_out_prng.io.out[8]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_hi_lo_hi, ref_out_prng.io.out[7]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_lo = cat(ref_out_prng.io.out[11], ref_out_prng.io.out[10]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_hi = cat(ref_out_prng.io.out[13], ref_out_prng.io.out[12]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_hi_hi_hi, ref_out_hi_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_12 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_12 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<14>, clock with :
      reset => (reset, UInt<14>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<14>("h3fff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<14>, clock with :
      reset => (reset, UInt<14>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<14>("h3fff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[16384] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-14bit, may finish after 16384 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-14bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_13 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[15]}, flip increment : UInt<1>, out : UInt<1>[15]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[15] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[7] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[8] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[9] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[10] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[11] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[12] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[13] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[14] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[15], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[14], state[13]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[7] <= state[6] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[8] <= state[7] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[9] <= state[8] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[10] <= state[9] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[11] <= state[10] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[12] <= state[11] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[13] <= state[12] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[14] <= state[13] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[7] <= io.seed.bits[7] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[8] <= io.seed.bits[8] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[9] <= io.seed.bits[9] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[10] <= io.seed.bits[10] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[11] <= io.seed.bits[11] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[12] <= io.seed.bits[12] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[13] <= io.seed.bits[13] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[14] <= io.seed.bits[14] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_13 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<15> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = cat(UInt<14>("h1"), _out_next_T) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<15> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<15>, clock with :
      reset => (reset, UInt<15>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_2 = bits(out_r, 13, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_3 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_4 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_5 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = bits(out_r, 14, 14) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_18 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_19 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_20 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_21 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_22 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_23 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_24 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_25 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_26 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_27 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_28 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_29 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_30 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_31 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_32 = bits(out_r, 14, 14) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_33 = xor(_out_next_T_17, _out_next_T_31) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_34 = cat(_out_next_T_2, _out_next_T_33) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_34 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_13 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[7] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[8] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[9] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[10] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[11] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[12] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[13] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[14] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_lo_hi = cat(ref_out_prng.io.out[2], ref_out_prng.io.out[1]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_lo = cat(ref_out_lo_lo_hi, ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_lo = cat(ref_out_prng.io.out[4], ref_out_prng.io.out[3]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_hi = cat(ref_out_prng.io.out[6], ref_out_prng.io.out[5]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi = cat(ref_out_lo_hi_hi, ref_out_lo_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo_lo = cat(ref_out_prng.io.out[8], ref_out_prng.io.out[7]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo_hi = cat(ref_out_prng.io.out[10], ref_out_prng.io.out[9]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_hi_lo_hi, ref_out_hi_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_lo = cat(ref_out_prng.io.out[12], ref_out_prng.io.out[11]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_hi = cat(ref_out_prng.io.out[14], ref_out_prng.io.out[13]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_hi_hi_hi, ref_out_hi_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_13 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_13 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<15>, clock with :
      reset => (reset, UInt<15>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<15>("h7fff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<15>, clock with :
      reset => (reset, UInt<15>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<15>("h7fff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[32768] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-15bit, may finish after 32768 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-15bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module MaxPeriodFibonacciLFSR_14 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[16]}, flip increment : UInt<1>, out : UInt<1>[16]} @[src/main/scala/chisel3/util/random/PRNG.scala 42:22]

    wire _state_WIRE : UInt<1>[16] @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[2] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[3] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[4] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[5] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[6] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[7] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[8] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[9] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[10] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[11] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[12] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[13] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[14] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    _state_WIRE[15] <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 46:28]
    reg state : UInt<1>[16], clock with :
      reset => (reset, _state_WIRE) @[src/main/scala/chisel3/util/random/PRNG.scala 55:49]
    when io.increment : @[src/main/scala/chisel3/util/random/PRNG.scala 69:22]
      node _T = xor(state[15], state[13]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_1 = xor(_T, state[12]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      node _T_2 = xor(_T_1, state[10]) @[src/main/scala/chisel3/util/random/LFSR.scala 15:41]
      state[0] <= _T_2 @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[1] <= state[0] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[2] <= state[1] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[3] <= state[2] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[4] <= state[3] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[5] <= state[4] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[6] <= state[5] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[7] <= state[6] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[8] <= state[7] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[9] <= state[8] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[10] <= state[9] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[11] <= state[10] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[12] <= state[11] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[13] <= state[12] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[14] <= state[13] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
      state[15] <= state[14] @[src/main/scala/chisel3/util/random/PRNG.scala 70:11]
    when io.seed.valid : @[src/main/scala/chisel3/util/random/PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[2] <= io.seed.bits[2] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[3] <= io.seed.bits[3] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[4] <= io.seed.bits[4] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[5] <= io.seed.bits[5] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[6] <= io.seed.bits[6] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[7] <= io.seed.bits[7] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[8] <= io.seed.bits[8] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[9] <= io.seed.bits[9] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[10] <= io.seed.bits[10] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[11] <= io.seed.bits[11] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[12] <= io.seed.bits[12] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[13] <= io.seed.bits[13] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[14] <= io.seed.bits[14] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
      state[15] <= io.seed.bits[15] @[src/main/scala/chisel3/util/random/PRNG.scala 74:11]
    io.out <= state @[src/main/scala/chisel3/util/random/PRNG.scala 78:10]

  module LFSR_14 :
    input clock : Clock
    input reset : UInt<1>
    output in : { } @[playground/src/utils/Utils.scala 27:14]
    output out : UInt<16> @[playground/src/utils/Utils.scala 28:15]

    node _out_next_T = xor(UInt<1>("h0"), UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_1 = xor(_out_next_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_2 = xor(_out_next_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_3 = cat(UInt<15>("h1"), _out_next_T_2) @[playground/src/exp6/LFSR.scala 28:31]
    wire out_next : UInt<16> @[playground/src/utils/Utils.scala 62:20]
    reg out_r : UInt<16>, clock with :
      reset => (reset, UInt<16>("h1")) @[playground/src/utils/Utils.scala 63:22]
    when UInt<1>("h1") : @[playground/src/utils/Utils.scala 63:22]
      out_r <= out_next @[playground/src/utils/Utils.scala 63:22]
    node _out_next_T_4 = bits(out_r, 14, 0) @[playground/src/exp6/LFSR.scala 28:33]
    node _out_next_T_5 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_6 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_7 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_8 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_9 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_10 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_11 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_12 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_13 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_14 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_15 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_16 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_17 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_18 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_19 = bits(out_r, 14, 14) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_20 = bits(out_r, 15, 15) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_21 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_22 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_23 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_24 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_25 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_26 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_27 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_28 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_29 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_30 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_31 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_32 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_33 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_34 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_35 = bits(out_r, 14, 14) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_36 = bits(out_r, 15, 15) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_37 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_38 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_39 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_40 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_41 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_42 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_43 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_44 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_45 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_46 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_47 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_48 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_49 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_50 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_51 = bits(out_r, 14, 14) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_52 = bits(out_r, 15, 15) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_53 = bits(out_r, 0, 0) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_54 = bits(out_r, 1, 1) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_55 = bits(out_r, 2, 2) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_56 = bits(out_r, 3, 3) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_57 = bits(out_r, 4, 4) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_58 = bits(out_r, 5, 5) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_59 = bits(out_r, 6, 6) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_60 = bits(out_r, 7, 7) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_61 = bits(out_r, 8, 8) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_62 = bits(out_r, 9, 9) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_63 = bits(out_r, 10, 10) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_64 = bits(out_r, 11, 11) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_65 = bits(out_r, 12, 12) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_66 = bits(out_r, 13, 13) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_67 = bits(out_r, 14, 14) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_68 = bits(out_r, 15, 15) @[playground/src/exp6/LFSR.scala 28:62]
    node _out_next_T_69 = xor(_out_next_T_20, _out_next_T_34) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_70 = xor(_out_next_T_69, _out_next_T_49) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_71 = xor(_out_next_T_70, _out_next_T_63) @[playground/src/exp6/LFSR.scala 28:87]
    node _out_next_T_72 = cat(_out_next_T_4, _out_next_T_71) @[playground/src/exp6/LFSR.scala 28:31]
    out_next <= _out_next_T_72 @[playground/src/utils/Utils.scala 64:10]
    out <= out_r @[playground/src/exp6/LFSR.scala 28:7]
    inst ref_out_prng of MaxPeriodFibonacciLFSR_14 @[src/main/scala/chisel3/util/random/PRNG.scala 91:22]
    ref_out_prng.clock <= clock
    ref_out_prng.reset <= reset
    ref_out_prng.io.seed.valid <= UInt<1>("h0") @[src/main/scala/chisel3/util/random/PRNG.scala 92:24]
    ref_out_prng.io.seed.bits[0] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[1] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[2] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[3] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[4] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[5] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[6] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[7] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[8] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[9] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[10] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[11] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[12] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[13] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[14] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.seed.bits[15] is invalid @[src/main/scala/chisel3/util/random/PRNG.scala 93:23]
    ref_out_prng.io.increment <= UInt<1>("h1") @[src/main/scala/chisel3/util/random/PRNG.scala 94:23]
    node ref_out_lo_lo_lo = cat(ref_out_prng.io.out[1], ref_out_prng.io.out[0]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_lo_hi = cat(ref_out_prng.io.out[3], ref_out_prng.io.out[2]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_lo = cat(ref_out_lo_lo_hi, ref_out_lo_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_lo = cat(ref_out_prng.io.out[5], ref_out_prng.io.out[4]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi_hi = cat(ref_out_prng.io.out[7], ref_out_prng.io.out[6]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo_hi = cat(ref_out_lo_hi_hi, ref_out_lo_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_lo = cat(ref_out_lo_hi, ref_out_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo_lo = cat(ref_out_prng.io.out[9], ref_out_prng.io.out[8]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo_hi = cat(ref_out_prng.io.out[11], ref_out_prng.io.out[10]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_lo = cat(ref_out_hi_lo_hi, ref_out_hi_lo_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_lo = cat(ref_out_prng.io.out[13], ref_out_prng.io.out[12]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi_hi = cat(ref_out_prng.io.out[15], ref_out_prng.io.out[14]) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi_hi = cat(ref_out_hi_hi_hi, ref_out_hi_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out_hi = cat(ref_out_hi_hi, ref_out_hi_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node ref_out = cat(ref_out_hi, ref_out_lo) @[src/main/scala/chisel3/util/random/PRNG.scala 95:17]
    node _T = eq(ref_out, out) @[playground/src/exp6/LFSR.scala 31:18]
    node _T_1 = asUInt(reset) @[playground/src/exp6/LFSR.scala 31:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
    when _T_2 : @[playground/src/exp6/LFSR.scala 31:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[playground/src/exp6/LFSR.scala 31:9]
      when _T_3 : @[playground/src/exp6/LFSR.scala 31:9]
        printf(clock, UInt<1>("h1"), "Assertion failed: ref_out=0x%x out=0x%x\n\n    at LFSR.scala:31 assert(ref_out === out, \"ref_out=0x%%%%x out=0x%%%%x\\n\", ref_out, out)\n", ref_out, out) : printf @[playground/src/exp6/LFSR.scala 31:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[playground/src/exp6/LFSR.scala 31:9]


  module LFSRTest_14 :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst m of LFSR_14 @[playground/src/exp6/LFSR.scala 35:17]
    m.clock <= clock
    m.reset <= reset
    node _T = asUInt(m.reset) @[playground/src/utils/Utils.scala 37:47]
    node _T_1 = eq(_T, UInt<1>("h0")) @[playground/src/utils/Utils.scala 37:38]
    reg step : UInt<16>, clock with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire stepWrap : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    stepWrap <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when _T_1 : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap = eq(step, UInt<16>("hffff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T = add(step, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      step <= _wrap_value_T_1 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      stepWrap <= wrap_wrap @[src/main/scala/chisel3/util/Counter.scala 118:23]
    reg cnt : UInt<16>, clock with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/chisel3/util/Counter.scala 61:40]
    wire finish_1 : UInt<1> @[src/main/scala/chisel3/util/Counter.scala 117:24]
    finish_1 <= UInt<1>("h0") @[src/main/scala/chisel3/util/Counter.scala 117:24]
    when UInt<1>("h1") : @[src/main/scala/chisel3/util/Counter.scala 118:16]
      node wrap_wrap_1 = eq(cnt, UInt<16>("hffff")) @[src/main/scala/chisel3/util/Counter.scala 73:24]
      node _wrap_value_T_2 = add(cnt, UInt<1>("h1")) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[src/main/scala/chisel3/util/Counter.scala 77:24]
      cnt <= _wrap_value_T_3 @[src/main/scala/chisel3/util/Counter.scala 77:15]
      finish_1 <= wrap_wrap_1 @[src/main/scala/chisel3/util/Counter.scala 118:23]
    wire allStepIn : { }[65536] @[playground/src/utils/Utils.scala 39:35]
    wire _allStepIn_WIRE : UInt<0> @[playground/src/utils/Utils.scala 39:35]
    _allStepIn_WIRE <= cnt @[playground/src/utils/Utils.scala 39:35]
    reg m_reset_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 41:25]
    m_reset_REG <= stepWrap @[playground/src/utils/Utils.scala 41:25]
    node _m_reset_T = asUInt(reset) @[playground/src/utils/Utils.scala 41:56]
    node _m_reset_T_1 = or(m_reset_REG, _m_reset_T) @[playground/src/utils/Utils.scala 41:45]
    m.reset <= _m_reset_T_1 @[playground/src/utils/Utils.scala 41:15]
    reg start : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 47:24]
    start <= UInt<1>("h1") @[playground/src/utils/Utils.scala 47:24]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[playground/src/utils/Utils.scala 48:28]
    REG <= start @[playground/src/utils/Utils.scala 48:28]
    node _T_2 = eq(REG, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:20]
    node _T_3 = and(start, _T_2) @[playground/src/utils/Utils.scala 48:17]
    when _T_3 : @[playground/src/utils/Utils.scala 48:37]
      node _T_4 = asUInt(reset) @[playground/src/utils/Utils.scala 48:45]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[playground/src/utils/Utils.scala 48:45]
      when _T_5 : @[playground/src/utils/Utils.scala 48:45]
        printf(clock, UInt<1>("h1"), "Starting test for LFSR-16bit, may finish after 65536 cycles\n") : printf @[playground/src/utils/Utils.scala 48:45]
    reg finish_r : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[playground/src/utils/Utils.scala 50:26]
    when finish_1 : @[playground/src/utils/Utils.scala 50:26]
      finish_r <= UInt<1>("h1") @[playground/src/utils/Utils.scala 50:26]
    finish <= finish_r @[playground/src/utils/Utils.scala 50:14]
    reg cycle : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[playground/src/utils/WCounter.scala 9:22]
    wire cycle_wrap : UInt<1> @[playground/src/utils/WCounter.scala 32:24]
    cycle_wrap <= UInt<1>("h0") @[playground/src/utils/WCounter.scala 32:24]
    when UInt<1>("h1") : @[playground/src/utils/WCounter.scala 33:16]
      node _cycle_wrap_wrap_T = mux(UInt<1>("h1"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[playground/src/utils/WCounter.scala 17:30]
      node cycle_wrap_wrap = eq(cycle, _cycle_wrap_wrap_T) @[playground/src/utils/WCounter.scala 17:22]
      node _cycle_wrap_value_T = add(cycle, UInt<1>("h1")) @[playground/src/utils/WCounter.scala 18:20]
      node _cycle_wrap_value_T_1 = tail(_cycle_wrap_value_T, 1) @[playground/src/utils/WCounter.scala 18:20]
      cycle <= _cycle_wrap_value_T_1 @[playground/src/utils/WCounter.scala 18:11]
      cycle_wrap <= cycle_wrap_wrap @[playground/src/utils/WCounter.scala 33:23]
    node _T_6 = eq(finish, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:11]
    node _T_7 = and(_T_6, finish_1) @[playground/src/utils/Utils.scala 52:21]
    when _T_7 : @[playground/src/utils/Utils.scala 52:32]
      node _T_8 = add(cycle, UInt<1>("h1")) @[playground/src/utils/Utils.scala 52:84]
      node _T_9 = asUInt(reset) @[playground/src/utils/Utils.scala 52:40]
      node _T_10 = eq(_T_9, UInt<1>("h0")) @[playground/src/utils/Utils.scala 52:40]
      when _T_10 : @[playground/src/utils/Utils.scala 52:40]
        printf(clock, UInt<1>("h1"), "Finish after %d cycles: LFSR-16bit\n", _T_8) : printf_1 @[playground/src/utils/Utils.scala 52:40]


  module Exp6AllTest :
    input clock : Clock
    input reset : UInt<1>
    output finish : UInt<1> @[playground/src/utils/Utils.scala 57:18]

    inst modules_0 of ShiftRegTest @[playground/src/exp6/Test.scala 6:41]
    modules_0.clock <= clock
    modules_0.reset <= reset
    inst modules_1 of ShiftRegTest_1 @[playground/src/exp6/Test.scala 6:41]
    modules_1.clock <= clock
    modules_1.reset <= reset
    inst modules_2 of ShiftRegTest_2 @[playground/src/exp6/Test.scala 6:41]
    modules_2.clock <= clock
    modules_2.reset <= reset
    inst modules_3 of BarrelShiftTest @[playground/src/exp6/Test.scala 7:50]
    modules_3.clock <= clock
    modules_3.reset <= reset
    inst modules_4 of BarrelShiftTest_1 @[playground/src/exp6/Test.scala 7:50]
    modules_4.clock <= clock
    modules_4.reset <= reset
    inst modules_5 of BarrelShiftTest_2 @[playground/src/exp6/Test.scala 7:50]
    modules_5.clock <= clock
    modules_5.reset <= reset
    inst modules_6 of BarrelShiftTest_3 @[playground/src/exp6/Test.scala 7:50]
    modules_6.clock <= clock
    modules_6.reset <= reset
    inst modules_7 of LFSRTest @[playground/src/exp6/Test.scala 8:42]
    modules_7.clock <= clock
    modules_7.reset <= reset
    inst modules_8 of LFSRTest_1 @[playground/src/exp6/Test.scala 8:42]
    modules_8.clock <= clock
    modules_8.reset <= reset
    inst modules_9 of LFSRTest_2 @[playground/src/exp6/Test.scala 8:42]
    modules_9.clock <= clock
    modules_9.reset <= reset
    inst modules_10 of LFSRTest_3 @[playground/src/exp6/Test.scala 8:42]
    modules_10.clock <= clock
    modules_10.reset <= reset
    inst modules_11 of LFSRTest_4 @[playground/src/exp6/Test.scala 8:42]
    modules_11.clock <= clock
    modules_11.reset <= reset
    inst modules_12 of LFSRTest_5 @[playground/src/exp6/Test.scala 8:42]
    modules_12.clock <= clock
    modules_12.reset <= reset
    inst modules_13 of LFSRTest_6 @[playground/src/exp6/Test.scala 8:42]
    modules_13.clock <= clock
    modules_13.reset <= reset
    inst modules_14 of LFSRTest_7 @[playground/src/exp6/Test.scala 8:42]
    modules_14.clock <= clock
    modules_14.reset <= reset
    inst modules_15 of LFSRTest_8 @[playground/src/exp6/Test.scala 8:42]
    modules_15.clock <= clock
    modules_15.reset <= reset
    inst modules_16 of LFSRTest_9 @[playground/src/exp6/Test.scala 8:42]
    modules_16.clock <= clock
    modules_16.reset <= reset
    inst modules_17 of LFSRTest_10 @[playground/src/exp6/Test.scala 8:42]
    modules_17.clock <= clock
    modules_17.reset <= reset
    inst modules_18 of LFSRTest_11 @[playground/src/exp6/Test.scala 8:42]
    modules_18.clock <= clock
    modules_18.reset <= reset
    inst modules_19 of LFSRTest_12 @[playground/src/exp6/Test.scala 8:42]
    modules_19.clock <= clock
    modules_19.reset <= reset
    inst modules_20 of LFSRTest_13 @[playground/src/exp6/Test.scala 8:42]
    modules_20.clock <= clock
    modules_20.reset <= reset
    inst modules_21 of LFSRTest_14 @[playground/src/exp6/Test.scala 8:42]
    modules_21.clock <= clock
    modules_21.reset <= reset
    node _finish_T = and(modules_0.finish, modules_1.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_1 = and(_finish_T, modules_2.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_2 = and(_finish_T_1, modules_3.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_3 = and(_finish_T_2, modules_4.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_4 = and(_finish_T_3, modules_5.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_5 = and(_finish_T_4, modules_6.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_6 = and(_finish_T_5, modules_7.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_7 = and(_finish_T_6, modules_8.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_8 = and(_finish_T_7, modules_9.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_9 = and(_finish_T_8, modules_10.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_10 = and(_finish_T_9, modules_11.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_11 = and(_finish_T_10, modules_12.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_12 = and(_finish_T_11, modules_13.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_13 = and(_finish_T_12, modules_14.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_14 = and(_finish_T_13, modules_15.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_15 = and(_finish_T_14, modules_16.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_16 = and(_finish_T_15, modules_17.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_17 = and(_finish_T_16, modules_18.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_18 = and(_finish_T_17, modules_19.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_19 = and(_finish_T_18, modules_20.finish) @[playground/src/exp6/Test.scala 9:43]
    node _finish_T_20 = and(_finish_T_19, modules_21.finish) @[playground/src/exp6/Test.scala 9:43]
    finish <= _finish_T_20 @[playground/src/exp6/Test.scala 9:10]
